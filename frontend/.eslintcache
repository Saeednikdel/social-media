[{"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/index.js":"1","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/App.js":"2","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/store.js":"3","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Activate.js":"4","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Signup.js":"5","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Home.js":"6","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPassword.js":"7","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/DetailPage.js":"8","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPasswordConfirm.js":"9","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/UserProfile.js":"10","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Login.js":"11","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PageNotFound.js":"12","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/hocs/Layout.js":"13","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Notification.js":"14","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/DialogAlert.js":"15","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Setting.js":"16","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Bookmark.js":"17","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/auth.js":"18","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/blog.js":"19","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Appbar.js":"20","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Footer.js":"21","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/index.js":"22","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetEmail.js":"23","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetPassword.js":"24","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Popup.js":"25","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetUserDetail.js":"26","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/types.js":"27","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/blog.js":"28","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/auth.js":"29","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/message.js":"30","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/message.js":"31","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Messages.js":"32","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BottomBar.js":"33","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/NewPost.js":"34","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Chat.js":"35","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PostCard.js":"36","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BookmarkCard.js":"37"},{"size":218,"mtime":1653131642572,"results":"38","hashOfConfig":"39"},{"size":2038,"mtime":1653478038936,"results":"40","hashOfConfig":"39"},{"size":440,"mtime":1607278797865,"results":"41","hashOfConfig":"39"},{"size":1453,"mtime":1626480827580,"results":"42","hashOfConfig":"39"},{"size":4667,"mtime":1652782198151,"results":"43","hashOfConfig":"39"},{"size":3895,"mtime":1653551943959,"results":"44","hashOfConfig":"39"},{"size":2256,"mtime":1652782103899,"results":"45","hashOfConfig":"39"},{"size":9773,"mtime":1653497947281,"results":"46","hashOfConfig":"39"},{"size":2750,"mtime":1652782116240,"results":"47","hashOfConfig":"39"},{"size":6766,"mtime":1653552764096,"results":"48","hashOfConfig":"39"},{"size":3170,"mtime":1652782081095,"results":"49","hashOfConfig":"39"},{"size":339,"mtime":1626470253280,"results":"50","hashOfConfig":"39"},{"size":2457,"mtime":1653383070823,"results":"51","hashOfConfig":"39"},{"size":888,"mtime":1625223500899,"results":"52","hashOfConfig":"39"},{"size":943,"mtime":1626403496489,"results":"53","hashOfConfig":"39"},{"size":4522,"mtime":1653559128439,"results":"54","hashOfConfig":"39"},{"size":2518,"mtime":1653552891237,"results":"55","hashOfConfig":"39"},{"size":12940,"mtime":1653558895829,"results":"56","hashOfConfig":"39"},{"size":4914,"mtime":1653489899605,"results":"57","hashOfConfig":"39"},{"size":5638,"mtime":1653491790181,"results":"58","hashOfConfig":"39"},{"size":426,"mtime":1653473884152,"results":"59","hashOfConfig":"39"},{"size":226,"mtime":1653220240477,"results":"60","hashOfConfig":"39"},{"size":3189,"mtime":1652782150182,"results":"61","hashOfConfig":"39"},{"size":3266,"mtime":1652782170094,"results":"62","hashOfConfig":"39"},{"size":1296,"mtime":1653551158212,"results":"63","hashOfConfig":"39"},{"size":3920,"mtime":1653417751098,"results":"64","hashOfConfig":"39"},{"size":2912,"mtime":1653558783098,"results":"65","hashOfConfig":"39"},{"size":1576,"mtime":1653415103593,"results":"66","hashOfConfig":"39"},{"size":4291,"mtime":1653558947616,"results":"67","hashOfConfig":"39"},{"size":1105,"mtime":1653237601999,"results":"68","hashOfConfig":"39"},{"size":531,"mtime":1653237579268,"results":"69","hashOfConfig":"39"},{"size":1856,"mtime":1653478105862,"results":"70","hashOfConfig":"39"},{"size":1803,"mtime":1653387696322,"results":"71","hashOfConfig":"39"},{"size":2601,"mtime":1653473017460,"results":"72","hashOfConfig":"39"},{"size":5131,"mtime":1653497951441,"results":"73","hashOfConfig":"39"},{"size":1897,"mtime":1653551940595,"results":"74","hashOfConfig":"39"},{"size":1976,"mtime":1653552593361,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"jbmewz",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"78"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"78"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/index.js",[],["174","175"],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/App.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/store.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Activate.js",["176","177"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { verify, resetState } from \"../actions/auth\";\nimport { Button, Typography, LinearProgress } from \"@material-ui/core\";\n\nconst Activate = ({\n  requestSuccess,\n  verify,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const verify_account = (e) => {\n    const uid = match.params.uid;\n    const token = match.params.token;\n    verify(uid, token);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/login\" />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      {requestSent ? <LinearProgress /> : \"\"}\n      <Typography variant=\"h5\">تایید ایمیل</Typography>\n      <Button\n        style={{ margin: 20 }}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={verify_account}\n        type=\"button\"\n      >\n        تایید\n      </Button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { verify, resetState })(Activate);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Signup.js",["178"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signup, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport DialogAlert from \"../components/DialogAlert\";\nimport { Done } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Signup = ({\n  signup,\n  isAuthenticated,\n  requestSuccess,\n  requestFail,\n  resetState,\n}) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n  const [alert, setAlert] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n  });\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n  // const [helperText, setHelperText] = useState({\n  //   name_helper: \"\",\n  //   email_helper: \"\",\n  //   password_helper: \"\",\n  //   re_password_helper: \"\",\n  // });\n  // const [errorList, setErrorList] = useState({\n  //   name_error: false,\n  //   email_error: false,\n  //   password_error: false,\n  //   re_password_error: false,\n  // });\n  const { name, email, password, re_password } = formData;\n  // const { name_helper, email_helper, password_helper, re_password_helper } = helperText;\n  // const { name_error, email_error, password_error, re_password_error } = errorList;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n      setRequestSent(false);\n      setAlert({\n        isOpen: true,\n        title: \"ثبت نام انجام شد.\",\n        message: \"برای فعالسازی حساب خود لینک ارسال شده به ایمیل، را باز کنید.\",\n      });\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === re_password) {\n      signup({ name, email, password, re_password });\n      setRequestSent(true);\n    }\n  };\n\n  if (isAuthenticated) return <Redirect to='/' />;\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant='h5'>ثبت نام</Typography>\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='text'\n            label='نام'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='email'\n            label='ایمیل'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='password'\n            label='رمز عبور'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='password'\n            label='تایید رمز عبور'\n            name='re_password'\n            value={re_password}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          type='submit'\n          variant='contained'\n          color='secondary'\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color='inherit'\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }>\n          ایجاد حساب\n        </Button>\n      </form>\n      <Typography variant='body1'>\n        قبلا ثبت نام کرده اید؟{\" \"}\n        <Link className={classes.navLink} to='/login'>\n          ورود{\" \"}\n        </Link>\n      </Typography>\n      <DialogAlert alert={alert} setAlert={setAlert} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\n\nexport default connect(mapStateToProps, { signup, resetState })(Signup);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Home.js",["179","180","181","182","183","184"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Grid,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport Notification from \"../components/Notification\";\nimport DialogAlert from \"../components/DialogAlert\";\nimport PostCard from \"../components/PostCard\";\nimport { connect } from \"react-redux\";\nimport { load_posts } from \"../actions/blog\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  noItemContainer: {\n    textAlign: \"center\",\n    marginTop: 140,\n    marginBottom: 140,\n  },\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  paginatorDiv: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 20,\n  },\n\n  imageContainer: {\n    position: \"relative\",\n  },\n  like: {\n    position: \"absolute\",\n    bottom: 15,\n    right: 15,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\nconst Home = ({ posts, load_posts, history, isAuthenticated }) => {\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const [page, setPage] = useState(\n    getQueryVariable(\"page\") ? parseInt(getQueryVariable(\"page\")) : 1\n  );\n  const classes = useStyles();\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const [alert, setAlert] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n    actionUrl: \"\",\n    actionText: \"\",\n  });\n  const { search } = useLocation();\n  useEffect(() => {\n    if (parseInt(getQueryVariable(\"page\")) !== page) setPage(1);\n\n    fetchData();\n  }, [search]);\n\n  const fetchData = async () => {\n    try {\n      await load_posts(getQueryVariable(\"page\"), getQueryVariable(\"keyword\"));\n    } catch (err) {}\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    const currentUrlParams = new URLSearchParams(window.location.search);\n    currentUrlParams.set(\"page\", value);\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\n    window.scrollTo({ top: 0, right: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <div>\n      {posts ? (\n        <Grid container spacing={1} style={{ marginTop: 2 }}>\n          {posts.posts.map((post) => (\n            <Grid item xs={12}>\n              <PostCard post={post} />\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <div className={classes.noItemContainer}>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      )}\n      {posts && posts.posts.length < 1 && (\n        <div className={classes.noItemContainer}>\n          <Typography variant=\"h6\">هیچ پستی پیدا نشد.</Typography>\n        </div>\n      )}\n      <div className={classes.paginatorDiv}>\n        {posts && posts.count > 1 && (\n          <Pagination\n            count={posts.count}\n            page={page}\n            color=\"secondary\"\n            onChange={handlePageChange}\n          />\n        )}\n      </div>\n\n      <Notification notify={notify} setNotify={setNotify} />\n      <DialogAlert alert={alert} setAlert={setAlert} />\n    </div>\n  );\n};\nfunction getQueryVariable(variable) {\n  var query = decodeURI(window.location.search.substring(1)).replace(\n    /\\+/g,\n    \" \"\n  );\n  //console.log(query); //\"app=article&act=news_content&aid=160990\"\n  var vars = query.split(\"&\");\n  //console.log(vars); //[ 'app=article', 'act=news_content', 'aid=160990' ]\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\");\n    //console.log(pair); //[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\n    if (pair[0] == variable) {\n      return pair[1];\n    }\n  }\n  return false;\n}\nconst mapStateToProps = (state) => ({\n  posts: state.blog.posts,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, {\n  load_posts,\n})(Home);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPassword.js",["185"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst ResetPassword = ({\n  requestSuccess,\n  requestFail,\n  resetState,\n  reset_password,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n  });\n  const { email } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    reset_password(email);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to='/' />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant='h5'>درخواست بازنشانی رمز عبور</Typography>\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='email'\n            label='ایمیل'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant='contained'\n          color='secondary'\n          type='submit'\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color='inherit'\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }>\n          ارسال\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password, resetState })(\n  ResetPassword\n);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/DetailPage.js",["186","187","188","189","190","191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  IconButton,\r\n  LinearProgress,\r\n  CardMedia,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  BookmarkBorder,\r\n  Bookmark,\r\n  FavoriteBorder,\r\n  Favorite,\r\n} from \"@material-ui/icons\";\r\nimport DialogAlert from \"../components/DialogAlert\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_post, load_replies, like, load_likes } from \"../actions/blog\";\r\nimport { bookmark } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  commentContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 250,\r\n  },\r\n  commentCard: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 150,\r\n  },\r\n  paper: {\r\n    height: 250,\r\n  },\r\n  summery: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  collapseTitle: { flex: 1 },\r\n  paginatorDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  emptyDiv: {\r\n    textAlign: \"center\",\r\n    height: 600,\r\n  },\r\n  carousel: { height: 400 },\r\n  off: {\r\n    backgroundColor: \"#f44336\",\r\n    borderRadius: 15,\r\n    color: \"#fff\",\r\n    paddingRight: 8,\r\n    paddingLeft: 8,\r\n    display: \"inline-block\",\r\n    margin: 10,\r\n  },\r\n  discountPrice: {\r\n    display: \"inline-block\",\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n}));\r\nconst DetailPage = ({\r\n  post,\r\n  likes,\r\n  load_post,\r\n  load_likes,\r\n  match,\r\n  isAuthenticated,\r\n  bookmark,\r\n  like,\r\n  load_replies,\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  const classes = useStyles();\r\n  const postId = match.params.postId;\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [alert, setAlert] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    message: \"\",\r\n    actionUrl: \"\",\r\n    actionText: \"\",\r\n  });\r\n  useEffect(() => {\r\n    load_post(postId);\r\n    load_likes(postId, 1);\r\n    //load_replies(itemId, 1);\r\n    window.scrollTo(0, 0);\r\n  }, [postId]);\r\n  const AddCommentHandle = () => {\r\n    if (isAuthenticated === true) {\r\n      setOpenPopup(true);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const BookmarkHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      bookmark(id, false);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const LikeHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      like(id);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const [expand, setExpand] = React.useState({\r\n    detail: false,\r\n    summery: false,\r\n  });\r\n  const { detail, summery } = expand;\r\n  const handleExpandClick = (name) => {\r\n    if (name === \"detail\") {\r\n      setExpand({\r\n        detail: !detail,\r\n        summery: false,\r\n      });\r\n    } else {\r\n      setExpand({\r\n        detail: false,\r\n        summery: !summery,\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    load_replies(postId, value);\r\n  };\r\n\r\n  return post ? (\r\n    <>\r\n      <Card variant=\"outlined\" className={classes.pageContainer}>\r\n        <Grid container>\r\n          <Grid xs={12} sm={6}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Link\r\n                className={classes.navLink}\r\n                exact\r\n                to={`/profile/${post.user}/`}\r\n              >\r\n                <Avatar\r\n                  style={{ height: 60, width: 60, margin: 10 }}\r\n                  src={post.user_image}\r\n                />\r\n              </Link>\r\n              <div>\r\n                <Link\r\n                  className={classes.navLink}\r\n                  exact\r\n                  to={`/profile/${post.user}/`}\r\n                >\r\n                  <Typography variant=\"h6\">{post.user_name}</Typography>\r\n                </Link>\r\n                <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                  {jMoment(post.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid xs={12} sm={6}>\r\n            <div\r\n              style={{\r\n                flexGrow: 1,\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <IconButton>\r\n                <Typography color=\"textSecondary\" variant=\"h6\">\r\n                  {post.like_count}\r\n                </Typography>\r\n              </IconButton>\r\n              <IconButton>\r\n                {likes &&\r\n                  likes.likes\r\n                    .slice(0, 3)\r\n                    .reverse()\r\n                    .map((like) => (\r\n                      <Avatar\r\n                        src={like.user_image}\r\n                        style={{ height: 35, width: 35, marginLeft: -8 }}\r\n                      />\r\n                    ))}\r\n              </IconButton>\r\n              <IconButton onClick={() => LikeHandle(post.id)}>\r\n                {post.liked ? (\r\n                  <Favorite color=\"error\" style={{ fontSize: 35 }} />\r\n                ) : (\r\n                  <FavoriteBorder color=\"error\" style={{ fontSize: 35 }} />\r\n                )}\r\n              </IconButton>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                onClick={() => BookmarkHandle(post.id)}\r\n              >\r\n                {post.bookmarked ? (\r\n                  <Bookmark style={{ fontSize: 35 }} />\r\n                ) : (\r\n                  <BookmarkBorder style={{ fontSize: 35 }} />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container>\r\n          <Grid xs={12} md={8}>\r\n            {/* <CardMedia\r\n              component='img'\r\n              image={post.image}\r\n              height='400'\r\n              onError={(e) => {\r\n                e.target.src = placeholderImage;\r\n              }}\r\n            /> */}\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle2\"\r\n                style={{ margin: 10 }}\r\n              >\r\n                بازدید : {post.view}\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle2\"\r\n                style={{ margin: 10 }}\r\n              >\r\n                پسندیده : {post.like_count}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <div className={classes.summery}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {post.content}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Card>\r\n      {/* <Card className={classes.commentContainer}>\r\n        <Button\r\n          color='secondary'\r\n          variant='outlined'\r\n          onClick={() => AddCommentHandle()}>\r\n          ثبت نظر\r\n        </Button>\r\n        <Grid container spacing={1}>\r\n          {comments &&\r\n            comments.comments.length > 0 &&\r\n            comments.comments.map((comment) => (\r\n              <Grid item xs={12} md={6}>\r\n                <Card variant='outlined' className={classes.commentCard}>\r\n                  <Typography color='textSecondary' variant='subtitle2'>\r\n                    {jMoment(comment.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n                  </Typography>\r\n                  <Typography variant='subtitle2'>\r\n                    {comment.user_name}\r\n                  </Typography>\r\n                  <Typography variant='body1'>{comment.title}</Typography>\r\n                  <Rating name='read-only' value={comment.star} readOnly />\r\n                  <Typography variant='body1'>{comment.description}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {comments && comments.count > 1 && (\r\n          <div className={classes.paginatorDiv}>\r\n            <Pagination\r\n              count={comments.count}\r\n              page={page}\r\n              color='secondary'\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </Card>\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      \r\n      <Popup\r\n        title={\"ثبت نظر\"}\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}>\r\n        <SetComment id={post.id} setOpenPopup={setOpenPopup} />\r\n      </Popup> */}\r\n      <DialogAlert alert={alert} setAlert={setAlert} />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <LinearProgress color=\"secondary\" />\r\n      <div className={classes.emptyDiv}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.blog.post,\r\n  likes: state.blog.likes,\r\n  //comments: state.shop.comments,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    load_post,\r\n    load_likes,\r\n    bookmark,\r\n    like,\r\n    load_replies,\r\n  })(DetailPage)\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPasswordConfirm.js",["193"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm, resetState } from \"../actions/auth\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst ResetPasswordConfirm = ({\n  requestSuccess,\n  reset_password_confirm,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\",\n  });\n\n  const { new_password, re_new_password } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to='/' />;\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='password'\n            label='رمز عبور جدید'\n            name='new_password'\n            value={new_password}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='password'\n            label='تکرار رمز عبور'\n            name='re_new_password'\n            value={re_new_password}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant='contained'\n          color='secondary'\n          type='submit'\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color='inherit'\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }>\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password_confirm, resetState })(\n  ResetPasswordConfirm\n);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/UserProfile.js",["194","195","196","197","198"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  LinearProgress,\r\n  CircularProgress,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport Notification from \"../components/Notification\";\r\nimport DialogAlert from \"../components/DialogAlert\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_profile, load_user_posts } from \"../actions/blog\";\r\nimport { follow_unfollw } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport { useLocation, withRouter } from \"react-router-dom\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  commentContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 250,\r\n  },\r\n  commentCard: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 150,\r\n  },\r\n  paginatorDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n\r\n  avatar: {\r\n    height: 100,\r\n    width: 100,\r\n    marginLeft: 40,\r\n    marginTop: -50,\r\n    border: \"5px solid\",\r\n    borderColor: `${theme.palette.primary.border}`,\r\n  },\r\n  noItemContainer: {\r\n    textAlign: \"center\",\r\n    marginTop: 140,\r\n    marginBottom: 140,\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n}));\r\nconst UserProfile = ({\r\n  match,\r\n  isAuthenticated,\r\n  load_profile,\r\n  profile,\r\n  userposts,\r\n  history,\r\n  load_user_posts,\r\n  follow_unfollw,\r\n  user,\r\n}) => {\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n\r\n  const [page, setPage] = useState(\r\n    getQueryVariable(\"page\") ? parseInt(getQueryVariable(\"page\")) : 1\r\n  );\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [alert, setAlert] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    message: \"\",\r\n    actionUrl: \"\",\r\n    actionText: \"\",\r\n  });\r\n  const classes = useStyles();\r\n  const userId = match.params.id;\r\n  const { search } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (parseInt(getQueryVariable(\"page\")) !== page) setPage(1);\r\n    fetchData();\r\n  }, [search, userId]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await load_profile(userId);\r\n      await load_user_posts(userId, getQueryVariable(\"page\"));\r\n    } catch (err) {}\r\n  };\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n    const currentUrlParams = new URLSearchParams(window.location.search);\r\n    currentUrlParams.set(\"page\", value);\r\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\r\n    window.scrollTo({ top: 0, right: 0, behavior: \"smooth\" });\r\n  };\r\n  return profile ? (\r\n    <>\r\n      <Card variant=\"outlined\">\r\n        <img\r\n          src=\"http://127.0.0.1:8000/media/header.jpg\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: 200,\r\n            objectFit: \"cover\",\r\n          }}\r\n        />\r\n        <Avatar className={classes.avatar} src={profile.image} />\r\n        <div className={classes.pageContainer}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <div>\r\n              <Typography variant=\"h5\">{profile.name}</Typography>\r\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                عضو از :\r\n                {jMoment(profile.join_date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n              </Typography>\r\n            </div>\r\n            {isAuthenticated && user.id !== profile.id && (\r\n              <div\r\n                style={{ flex: 1, display: \"flex\", justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={() => follow_unfollw(profile.id)}\r\n                >\r\n                  {profile.followed === true ? \"آنفالو\" : \"فالو\"}\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"subtitle2\"\r\n              style={{ margin: 10 }}\r\n            >\r\n              دنبال کننده : {profile.followers}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"subtitle2\"\r\n              style={{ margin: 10 }}\r\n            >\r\n              دنبال میکند : {profile.followings}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {userposts ? (\r\n        <Grid container spacing={1} style={{ marginTop: 2 }}>\r\n          {userposts.posts.map((post) => (\r\n            <Grid item xs={12}>\r\n              <PostCard post={post} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.noItemContainer}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      )}\r\n      {userposts && userposts.posts.length < 1 && (\r\n        <div className={classes.noItemContainer}>\r\n          <Typography variant=\"h6\">هیچ پستی پیدا نشد.</Typography>\r\n        </div>\r\n      )}\r\n      <div className={classes.paginatorDiv}>\r\n        {userposts && userposts.count > 1 && (\r\n          <Pagination\r\n            count={userposts.count}\r\n            page={page}\r\n            color=\"secondary\"\r\n            onChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      <DialogAlert alert={alert} setAlert={setAlert} />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <LinearProgress color=\"secondary\" />\r\n    </>\r\n  );\r\n};\r\nfunction getQueryVariable(variable) {\r\n  var query = decodeURI(window.location.search.substring(1)).replace(\r\n    /\\+/g,\r\n    \" \"\r\n  );\r\n  //console.log(query); //\"app=article&act=news_content&aid=160990\"\r\n  var vars = query.split(\"&\");\r\n  //console.log(vars); //[ 'app=article', 'act=news_content', 'aid=160990' ]\r\n  for (var i = 0; i < vars.length; i++) {\r\n    var pair = vars[i].split(\"=\");\r\n    //console.log(pair); //[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\r\n    if (pair[0] == variable) {\r\n      return pair[1];\r\n    }\r\n  }\r\n  return false;\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n  profile: state.blog.profile,\r\n  userposts: state.blog.userposts,\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    load_profile,\r\n    load_user_posts,\r\n    follow_unfollw,\r\n  })(UserProfile)\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Login.js",["199"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Login = ({ login, isAuthenticated, requestFail, resetState }) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (isAuthenticated) {\n      resetState();\n    }\n  }, [requestFail, isAuthenticated]);\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    login(email, password);\n  };\n\n  if (isAuthenticated) return <Redirect to='/' />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant='h5'>ورود</Typography>\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='email'\n            label='ایمیل'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='password'\n            label='رمز عبور'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength='4'\n            required\n          />\n        </div>\n        <Button\n          type='submit'\n          style={{ margin: 20 }}\n          variant='contained'\n          color='secondary'\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color='inherit'\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }>\n          ورود\n        </Button>\n      </form>\n      <Typography variant='body1'>\n        قبلا ثبت نام نکرده اید؟{\" \"}\n        <Link className={classes.navLink} to='/signup'>\n          ثبت نام\n        </Link>\n      </Typography>\n      <Typography variant='body1'>\n        رمز عبورتان را فراموش کرده اید؟{\" \"}\n        <Link className={classes.navLink} to='/reset_password'>\n          بازیابی\n        </Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\n\nexport default connect(mapStateToProps, { login, resetState })(Login);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PageNotFound.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/hocs/Layout.js",["200"],"import React, { useEffect, useState } from \"react\";\nimport Appbar from \"../components/Appbar\";\nimport BottomBar from \"../components/BottomBar\";\n///import AppBreadCrump from \"../components/AppBreadCrump\";\nimport Footer from \"../components/Footer\";\nimport { connect } from \"react-redux\";\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { create } from \"jss\";\nimport rtl from \"jss-rtl\";\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst Layout = (props) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await props.checkAuthenticated();\n        await props.load_user();\n      } catch (err) {}\n    };\n    if (JSON.parse(localStorage.getItem(\"darkState\"))) {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#464646\");\n    }\n    fetchData();\n  }, []);\n  const [darkState, setDarkState] = useState(\n    JSON.parse(localStorage.getItem(\"darkState\"))\n  );\n  const palletType = darkState ? \"dark\" : \"light\";\n\n  const darkTheme = createMuiTheme({\n    typography: {\n      fontFamily: \"Vazir\",\n    },\n    direction: \"rtl\",\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#2196f3\",\n        border: darkState ? \"#464646\" : \"#fff\",\n      },\n      secondary: {\n        main: \"#2979ff\",\n      },\n    },\n  });\n  const handleThemeChange = () => {\n    if (!darkState) {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#464646\");\n    } else {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#ffffff\");\n    }\n    setDarkState(!darkState);\n    localStorage.setItem(\n      \"darkState\",\n      (!JSON.parse(localStorage.getItem(\"darkState\"))).toString()\n    );\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={darkTheme}>\n        <Appbar checked={darkState} onChange={handleThemeChange} />\n        <Container maxWidth=\"md\">{props.children}</Container>\n        <CssBaseline />\n        <Footer />\n        <BottomBar />\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Notification.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/DialogAlert.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Setting.js",["201","202","203"],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Bookmark.js",["204","205"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_bookmark, bookmark } from \"../actions/auth\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport BookmarkCard from \"../components/BookmarkCard\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  paginatorDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n}));\r\nconst Bookmark = ({\r\n  load_bookmark,\r\n  bookmarkList,\r\n  bookmark,\r\n  isAuthenticated,\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_bookmark(page);\r\n      } catch (err) {}\r\n    };\r\n    if (localStorage.getItem(\"id\")) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n  const classes = useStyles();\r\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\r\n\r\n  const BookmarkHandle = (id) => {\r\n    bookmark(id, page);\r\n  };\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    load_bookmark(value);\r\n    window.scrollTo({ top: 0, right: 0, behavior: \"smooth\" });\r\n  };\r\n  return bookmarkList ? (\r\n    <div className={classes.pageContainer}>\r\n      <Grid container spacing={1} style={{ marginTop: 2 }}>\r\n        {bookmarkList.bookmarks.map((post) => (\r\n          <Grid item xs={12}>\r\n            <BookmarkCard post={post} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {bookmarkList.bookmarks.length < 1 && (\r\n        <div style={{ textAlign: \"center\", marginTop: 120 }}>\r\n          <Typography variant=\"h6\">هیچ پستی ذخیره نشده است.</Typography>\r\n        </div>\r\n      )}\r\n      {bookmarkList && bookmarkList.count > 1 && (\r\n        <div className={classes.paginatorDiv}>\r\n          <Pagination\r\n            count={bookmarkList.count}\r\n            page={page}\r\n            color=\"secondary\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  bookmarkList: state.auth.bookmarks,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { load_bookmark, bookmark })(Bookmark);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/auth.js",["206","207","208","209","210","211"],"import axios from \"axios\";\nimport { logout2, load_replies } from \"./blog\";\nimport {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n  BOOKMARK_SUCCESS,\n  BOOKMARK_FAIL,\n  NEW_POST_SUCCESS,\n  NEW_POST_FAIL,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAIL,\n  UPDATE_AVATAR_SUCCESS,\n  UPDATE_AVATAR_FAIL,\n} from \"./types\";\nimport { load_post, load_profile } from \"./blog\";\nexport const update_avatar = (image) => async (dispatch) => {\n  let formData = new FormData();\n  const user = localStorage.getItem(\"id\");\n  formData.append(\"image\", image);\n  formData.append(\"id\", user);\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n      Accept: \"application/json\",\n    },\n  };\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/accounts/avatar/`,\n      formData,\n      config\n    );\n    dispatch({\n      type: UPDATE_AVATAR_SUCCESS,\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: UPDATE_AVATAR_FAIL,\n    });\n  }\n};\nexport const follow_unfollw = (target_id) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, target_id });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/accounts/follow/`,\n        body,\n        config\n      );\n      dispatch({\n        type: FOLLOW_SUCCESS,\n      });\n      dispatch(load_profile(target_id));\n    } catch (err) {\n      dispatch({\n        type: FOLLOW_FAIL,\n      });\n    }\n  }\n};\nexport const new_post = (content) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, content });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/blog/post-create/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: NEW_POST_SUCCESS,\n      });\n    } catch (err) {\n      dispatch({\n        type: NEW_POST_FAIL,\n      });\n    }\n  }\n};\nexport const comment = (item, star, title, description) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, item, star, title, description });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/comment/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SET_COMMENTS_SUCCESS,\n      });\n      dispatch(load_replies(item, 1));\n    } catch (err) {\n      dispatch({\n        type: SET_COMMENTS_FAIL,\n      });\n    }\n  }\n};\n\nexport const set_user_detail =\n  (id, name, account_no, phone_no, birth_date, id_code) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const body = JSON.stringify({\n        id,\n        name,\n        account_no,\n        phone_no,\n        birth_date,\n        id_code,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/user-set/`,\n          body,\n          config\n        );\n\n        dispatch({\n          type: SET_USER_DETAIL_SUCCESS,\n          payload: res.data,\n        });\n        dispatch(load_user());\n      } catch (err) {\n        dispatch({\n          type: SET_USER_DETAIL_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: SET_USER_DETAIL_FAIL,\n      });\n    }\n  };\nexport const bookmark = (id, page) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, id });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/blog/bookmark/`,\n        body,\n        config\n      );\n      dispatch({\n        type: BOOKMARK_SUCCESS,\n        payload: res.data,\n      });\n      if (page) {\n        dispatch(load_bookmark(page));\n      } else {\n        dispatch(load_post(id));\n      }\n    } catch (err) {\n      dispatch({\n        type: BOOKMARK_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: BOOKMARK_FAIL,\n    });\n  }\n};\nexport const load_bookmark =\n  (page = 1) =>\n  async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const userId = localStorage.getItem(\"id\");\n      try {\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/blog/bookmark-list/${userId}/${page}/`,\n          config\n        );\n\n        dispatch({\n          type: LOAD_BOOKMARK_SUCCESS,\n          payload: res.data,\n        });\n      } catch (err) {\n        dispatch({\n          type: LOAD_BOOKMARK_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: LOAD_BOOKMARK_FAIL,\n      });\n    }\n  };\nexport const checkAuthenticated = () => async (dispatch) => {\n  if (typeof window == \"undefined\") {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const load_user = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      );\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(load_user());\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const signup =\n  ({ name, email, password, re_password }) =>\n  async (dispatch) => {\n    // const csrftoken = getCookie(\"csrftoken\");\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"X-CSRFToken\": csrftoken,\n      },\n    };\n\n    const body = JSON.stringify({ name, email, password, re_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      // console.log(\"request.status\", error.request.status);\n      // console.log(\"request.response\", error.request.response);\n      // console.log(\"message\", error.message);\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n    }\n  };\n\nexport const verify = (uid, token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_FAIL,\n      });\n    }\n  };\nexport const set_email =\n  (new_email, re_new_email, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_email,\n        re_new_email,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_email/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_EMAIL_SUCCESS,\n        });\n        dispatch(load_user());\n      } catch (error) {\n        dispatch({\n          type: SET_EMAIL_FAIL,\n        });\n      }\n    }\n  };\nexport const set_password =\n  (new_password, re_new_password, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_password,\n        re_new_password,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_password/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_PASSWORD_SUCCESS,\n        });\n      } catch (error) {\n        dispatch({\n          type: SET_PASSWORD_FAIL,\n        });\n      }\n    }\n  };\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n  dispatch(logout2({ type: LOGOUT }));\n};\nexport const resetState = () => (dispatch) => {\n  dispatch({ type: RESET_STATE });\n};\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/blog.js",["212"],"import axios from \"axios\";\r\nimport {\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POSTS_FAIL,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_POST_FAIL,\r\n  LOGOUT,\r\n  LIKE_SUCCESS,\r\n  LIKE_FAIL,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_COMMENTS_FAIL,\r\n  LOAD_LIKE_SUCCESS,\r\n  LOAD_LIKE_FAIL,\r\n  LOAD_PROFILE_SUCCESS,\r\n  LOAD_PROFILE_FAIL,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  LOAD_USER_POSTS_FAIL,\r\n} from \"./types\";\r\nimport { load_bookmark } from \"./auth\";\r\nexport const load_posts = (page, keyword) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const user = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : false;\r\n  const body = JSON.stringify({\r\n    keyword,\r\n    page,\r\n    user,\r\n  });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/post-list/${page}/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_POSTS_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const load_user_posts = (userId, page) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/user-post-list/${userId}/${page}/`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_USER_POSTS_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_post = (postId) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const user = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : false;\r\n  const body = JSON.stringify({ user });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/post-detail/${postId}/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOAD_POST_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_POST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_profile = (target_id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const user = localStorage.getItem(\"id\");\r\n  const body = JSON.stringify({ user, target_id });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/profile-detail/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOAD_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_PROFILE_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const load_replies =\r\n  (item, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/comment-list/${item}/${page}/`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: LOAD_COMMENTS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_COMMENTS_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const load_likes =\r\n  (postId, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/blog/like-list/${postId}/${page}/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: LOAD_LIKE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_LIKE_FAIL,\r\n      });\r\n    }\r\n  };\r\nexport const like = (id) => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const user = localStorage.getItem(\"id\");\r\n    const body = JSON.stringify({ user, id });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/blog/like/`,\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: LIKE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(load_post(id));\r\n      dispatch(load_likes(id));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LIKE_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: LIKE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout2 = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Appbar.js",["213","214","215"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  IconButton,\r\n  Drawer,\r\n  Divider,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\nimport {\r\n  Brightness7,\r\n  Brightness4,\r\n  PermIdentityRounded,\r\n  Menu,\r\n  SearchSharp,\r\n  Settings,\r\n  ArrowBack,\r\n  BookmarkBorder,\r\n  ArrowForward,\r\n} from \"@material-ui/icons\";\r\nimport logo from \"../sk.svg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  center: { flexGrow: 1, textAlign: \"center\" },\r\n  rightIcons: { flexGrow: 1 },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  list: {\r\n    width: 280,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  menuicon: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nconst Appbar = ({\r\n  isAuthenticated,\r\n  logout,\r\n  checked,\r\n  onChange,\r\n  history,\r\n  user,\r\n}) => {\r\n  useEffect(() => {}, []);\r\n  const classes = useStyles();\r\n\r\n  const logOut = () => {\r\n    logout();\r\n    setDrawerState(!drawerstate);\r\n  };\r\n  const [drawerstate, setDrawerState] = useState(false);\r\n  const toggleDrawer = (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setDrawerState(!drawerstate);\r\n  };\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpand = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const onTextChange = (e) => setSearch(e.target.value);\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    const currentUrlParams = new URLSearchParams();\r\n    currentUrlParams.set(\"keyword\", search);\r\n    if (window.location.pathname === \"/\") {\r\n      history.push(\r\n        window.location.pathname + \"?\" + currentUrlParams.toString()\r\n      );\r\n    } else {\r\n      window.location.replace(\"/?keyword=\" + search);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" color=\"inherit\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n            <Menu />\r\n          </IconButton>\r\n          <div className={classes.center}>\r\n            <Link to=\"/\">\r\n              <img src={logo} style={{ height: 30 }} />\r\n            </Link>\r\n          </div>\r\n          <IconButton color=\"inherit\" onClick={onChange}>\r\n            {checked ? <Brightness7 /> : <Brightness4 />}\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar>\r\n        <div className={classes.rightIcons}></div>\r\n        <form autoComplete=\"off\" onSubmit={(e) => onSearch(e)}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            style={{ marginTop: 5 }}\r\n            id=\"search\"\r\n            placeholder=\"جستجو\"\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            value={search}\r\n            onChange={(e) => onTextChange(e)}\r\n            size=\"small\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <IconButton color=\"inherit\" size=\"small\" type=\"submit\">\r\n                  <SearchSharp />\r\n                </IconButton>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Toolbar>\r\n      <Divider />\r\n\r\n      <Drawer anchor={\"left\"} open={drawerstate} onClose={toggleDrawer}>\r\n        <div className={classes.list}>\r\n          <Toolbar>\r\n            <Link className={classes.navLink} to=\"/\" onClick={toggleDrawer}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                صفحه اصلی\r\n              </Typography>\r\n            </Link>\r\n          </Toolbar>\r\n\r\n          {isAuthenticated ? (\r\n            <>\r\n              <Link\r\n                className={classes.navLink}\r\n                to={user && `/profile/${user.id}/`}\r\n                onClick={toggleDrawer}\r\n              >\r\n                <PermIdentityRounded className={classes.menuicon} />\r\n                <Typography variant=\"body1\">پروفایل</Typography>\r\n              </Link>\r\n              <Link\r\n                className={classes.navLink}\r\n                to=\"/bookmark\"\r\n                onClick={toggleDrawer}\r\n              >\r\n                <BookmarkBorder className={classes.menuicon} />\r\n                <Typography variant=\"body1\">ذخیره شده</Typography>\r\n              </Link>\r\n              <Link\r\n                className={classes.navLink}\r\n                to=\"/setting\"\r\n                onClick={toggleDrawer}\r\n              >\r\n                <Settings className={classes.menuicon} />\r\n                <Typography variant=\"body1\">تنظیمات</Typography>\r\n              </Link>\r\n              <Link className={classes.navLink} onClick={() => logOut()}>\r\n                <ArrowForward className={classes.menuicon} />\r\n                <Typography variant=\"body1\">خروج</Typography>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <Link\r\n              className={classes.navLink}\r\n              to=\"/login\"\r\n              onClick={toggleDrawer}\r\n            >\r\n              <ArrowBack className={classes.menuicon} />\r\n              <Typography variant=\"body1\">ورود</Typography>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { logout })(Appbar));\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Footer.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/index.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetEmail.js",["216"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_email, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetEmail = ({\r\n  set_email,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_email: \"\",\r\n    re_new_email: \"\",\r\n    current_password: \"\",\r\n  });\r\n\r\n  const { new_email, re_new_email, current_password } = formData;\r\n  const classes = useStyles();\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_email(new_email, re_new_email, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete='off'\r\n            type='email'\r\n            label='ایمیل جدید'\r\n            name='new_email'\r\n            value={new_email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete='off'\r\n            type='email'\r\n            label='تکرار ایمیل'\r\n            name='re_new_email'\r\n            value={re_new_email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete='off'\r\n            type='password'\r\n            label='رمز عبور'\r\n            name='current_password'\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant='contained'\r\n          color='secondary'\r\n          type='submit'\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color='inherit'\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }>\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_email, resetState })(SetEmail);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetPassword.js",["217"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_password, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetPassword = ({\r\n  set_password,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  resetState,\r\n  requestFail,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n    current_password: \"\",\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { new_password, re_new_password, current_password } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_password(new_password, re_new_password, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete='off'\r\n            type='password'\r\n            label='رمز عبور جدید'\r\n            name='new_password'\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete='off'\r\n            type='password'\r\n            label='تکرار رمز جدید'\r\n            name='re_new_password'\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete='off'\r\n            type='password'\r\n            label='رمز عبور فعلی'\r\n            name='current_password'\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant='contained'\r\n          color='secondary'\r\n          type='submit'\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color='inherit'\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }>\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_password, resetState })(\r\n  SetPassword\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Popup.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetUserDetail.js",["218"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { set_user_detail, resetState } from \"../actions/auth\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetUserDetail = ({\r\n  propsid,\r\n  propsname,\r\n  propsphone_no,\r\n  propsbirth_date,\r\n  setOpenPopup,\r\n  set_user_detail,\r\n  resetState,\r\n  requestSuccess,\r\n  requestFail,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    id: propsid,\r\n    name: propsname,\r\n    phone_no: propsphone_no,\r\n    birth_date: propsbirth_date,\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { id, name, phone_no, account_no, birth_date, id_code } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_user_detail(id, name, account_no, phone_no, birth_date, id_code);\r\n    setRequestSent(true);\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"نام و نام خانوادگی\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"تلفن\"\r\n            name=\"phone_no\"\r\n            value={phone_no}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n            <DatePicker\r\n              className={classes.textField}\r\n              name=\"birth_date\"\r\n              okLabel=\"تأیید\"\r\n              label=\"تاریخ تولد\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={birth_date}\r\n              onChange={(date) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  birth_date: date.toISOString().split(\"T\")[0],\r\n                })\r\n              }\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n});\r\nexport default connect(mapStateToProps, { set_user_detail, resetState })(\r\n  SetUserDetail\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/types.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/blog.js",["219","220","221"],"import {\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POSTS_FAIL,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_POST_FAIL,\r\n  LOGOUT,\r\n  BOOKMARK_SUCCESS,\r\n  BOOKMARK_FAIL,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_MENU_SUCCESS,\r\n  LOAD_LIKE_SUCCESS,\r\n  LOAD_LIKE_FAIL,\r\n  LOAD_PROFILE_SUCCESS,\r\n  LOAD_PROFILE_FAIL,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  LOAD_USER_POSTS_FAIL,\r\n} from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOAD_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        post: null,\r\n        replies: null,\r\n      };\r\n    case LOAD_USER_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userposts: payload,\r\n      };\r\n    case LOAD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n      };\r\n    case LOAD_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n      };\r\n    case LOAD_MENU_SUCCESS:\r\n      return {\r\n        ...state,\r\n        category: payload,\r\n      };\r\n    case LOAD_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: payload,\r\n      };\r\n    case LOAD_LIKE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        likes: payload,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"id\");\r\n      return {\r\n        ...state,\r\n        order: null,\r\n      };\r\n\r\n    case LOAD_POSTS_FAIL:\r\n    case LOAD_POST_FAIL:\r\n    case LOAD_LIKE_FAIL:\r\n    case LOAD_PROFILE_FAIL:\r\n    case LOAD_USER_POSTS_FAIL:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/auth.js",["222"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n  BOOKMARK_SUCCESS,\n  BOOKMARK_FAIL,\n  NEW_POST_SUCCESS,\n  NEW_POST_FAIL,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAIL,\n  UPDATE_AVATAR_SUCCESS,\n  UPDATE_AVATAR_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: null,\n  user: {\n    id: null,\n  },\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case USER_LOADED_SUCCESS:\n      localStorage.setItem(\"id\", payload.id);\n      return {\n        ...state,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n        requestSuccess: true,\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case RESET_PASSWORD_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case ACTIVATION_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_EMAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    //new\n    case SET_USER_DETAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_USER_DETAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOAD_BOOKMARK_SUCCESS:\n      return {\n        ...state,\n        bookmarks: payload,\n      };\n    case NEW_POST_SUCCESS:\n    case SET_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case NEW_POST_FAIL:\n    case SET_COMMENTS_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case RESET_PASSWORD_CONFIRM_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case ACTIVATION_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_EMAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case AUTHENTICATED_FAIL:\n      localStorage.removeItem(\"id\");\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      localStorage.removeItem(\"id\");\n      return {\n        ...state,\n        user: null,\n      };\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case RESET_STATE:\n      return {\n        ...state,\n        requestSuccess: null,\n        requestFail: null,\n      };\n    case UPDATE_AVATAR_SUCCESS:\n    case UPDATE_AVATAR_FAIL:\n    case FOLLOW_SUCCESS:\n    case FOLLOW_FAIL:\n    case BOOKMARK_SUCCESS:\n    case BOOKMARK_FAIL:\n    case LOAD_BOOKMARK_FAIL:\n    default:\n      return state;\n  }\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/message.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/message.js",["223"],"import {\n  LOAD_MSG_SUCCESS,\n  LOAD_MSG_FAIL,\n  LOAD_ROOMS_SUCCESS,\n  LOAD_ROOMS_FAIL,\n} from \"../actions/types\";\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOAD_MSG_SUCCESS:\n      return {\n        ...state,\n        message: payload,\n      };\n    case LOAD_ROOMS_SUCCESS:\n      return {\n        ...state,\n        rooms: payload,\n      };\n    case LOAD_MSG_FAIL:\n    case LOAD_ROOMS_FAIL:\n    default:\n      return state;\n  }\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Messages.js",["224","225","226","227","228"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Typography, Avatar, makeStyles, Divider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { load_rooms } from \"../actions/message\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  avatar: {\n    height: 50,\n    width: 50,\n  },\n}));\nconst Messages = ({ load_rooms, rooms, user, isAuthenticated }) => {\n  useEffect(() => {\n    load_rooms();\n  }, []);\n  const classes = useStyles();\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n\n  const handleClick = () => {};\n\n  return (\n    <div>\n      {rooms &&\n        rooms.map((room) => (\n          <>\n            <div style={{ display: \"flex\", alignItems: \"center\", margin: 10 }}>\n              <Link exact to={`/chat/${room.id}/`}>\n                {room.users_list.map(\n                  (chatuser) =>\n                    chatuser.id !== user.id && (\n                      <Avatar\n                        src={chatuser.image}\n                        className={\n                          room.online_list.length > 0 ? \"online\" : \"offline\"\n                        }\n                      />\n                    )\n                )}\n              </Link>\n              <div>\n                <Typography variant=\"body1\">\n                  {room.users_list.map((u) => u.id !== user.id && u.name)}\n                </Typography>\n              </div>\n            </div>\n            <Divider />\n          </>\n        ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  rooms: state.message.rooms,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps, { load_rooms })(Messages);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BottomBar.js",["229","230"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  makeStyles,\n  Toolbar,\n  IconButton,\n  Fab,\n} from \"@material-ui/core\";\n\nimport {\n  Email,\n  Add,\n  NotificationsNone,\n  Home,\n  Search,\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n}));\n\nfunction BottomBar() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color=\"inherit\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Link className={classes.navLink} to=\"/messages\">\n            <IconButton color=\"inherit\" aria-label=\"Open drawer\">\n              <Email />\n            </IconButton>\n          </Link>\n          <Link className={classes.navLink} to=\"/notification\">\n            <IconButton color=\"inherit\">\n              <NotificationsNone />\n            </IconButton>\n          </Link>\n          <Link className={classes.navLink} to=\"/newpost\">\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"new\">\n              <Add />\n            </Fab>\n          </Link>\n          <IconButton color=\"inherit\">\n            <Search />\n          </IconButton>\n          <Link className={classes.navLink} to=\"/\">\n            <IconButton color=\"inherit\">\n              <Home />\n            </IconButton>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nexport default BottomBar;\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/NewPost.js",["231"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { resetState, new_post } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: { marginTop: 20, minWidth: 240, width: \"80%\" },\n  button: { marginTop: 20, marginBottom: 20 },\n}));\nconst NewPost = ({\n  requestSuccess,\n  requestFail,\n  new_post,\n  isAuthenticated,\n  resetState,\n}) => {\n  const [formData, setFormData] = useState({\n    content: \"\",\n  });\n  const classes = useStyles();\n\n  const { content } = formData;\n  const [requestSent, setRequestSent] = useState(false);\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      setRequestSent(false);\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n  if (requestSuccess === true) return <Redirect to=\"/\" />;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    new_post(content);\n    setRequestSent(true);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            className={classes.textField}\n            type=\"text\"\n            label=\"متن پست\"\n            name=\"content\"\n            value={content}\n            multiline\n            rows={10}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <Button\n          className={classes.button}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ارسال\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { resetState, new_post })(NewPost);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Chat.js",["232","233","234","235","236"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { w3cwebsocket } from \"websocket\";\nimport { TextField, Typography, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { ArrowBackIos } from \"@material-ui/icons\";\nimport { load_msg } from \"../actions/message\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Chat = ({ match, load_msg, message, isAuthenticated }) => {\n  const room = match.params.room;\n  const userid = localStorage.getItem(\"id\");\n  const client = new w3cwebsocket(\n    `ws://127.0.0.1:8000/ws/some_url/${room}/${userid}/`\n  );\n\n  const [msg, setMsg] = useState(\"\");\n  const [online, setOnline] = useState(0);\n  const [connectionStatus, setConnectionStatus] = useState(\"در حال اتصال...\");\n  const [chat, setChat] = useState([]);\n  const chatContainer = useRef();\n\n  useEffect(() => {\n    load_msg(room);\n    client.onopen = () => {\n      setConnectionStatus(\"متصل\");\n    };\n    client.onmessage = (message) => {\n      const data = JSON.parse(message.data);\n      data.message && setChat((prev) => [...prev, data]);\n      data.online && setOnline(data.online);\n      scrollTomyRef();\n      console.log(message.data);\n    };\n    client.onclose = (e) => {\n      console.error(\"connection closed unexpectedly!!!\");\n      setConnectionStatus(\"قطع شد\");\n    };\n  }, [room]);\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    if (msg !== \"\") {\n      client.send(\n        JSON.stringify({\n          type: \"message\",\n          message: msg,\n          user: userid,\n        })\n      );\n      setMsg(\"\");\n    }\n  };\n  const scrollTomyRef = () => {\n    const scroll =\n      chatContainer.current.scrollHeight - chatContainer.current.clientHeight;\n    chatContainer.current.scrollTo(0, scroll);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          maxWidth: 500,\n          paddingTop: 20,\n          flex: 1,\n        }}\n      >\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          {connectionStatus}\n        </Typography>\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          {online > 1 && \"آنلاین\"}\n        </Typography>\n        <div\n          ref={chatContainer}\n          style={{\n            height: 400,\n            maxWidth: 500,\n            overflow: \"auto\",\n            border: \"silver 1px solid\",\n            borderRadius: 8,\n          }}\n        >\n          {message &&\n            message.msg.map((item) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent:\n                    item.user == userid ? \"flex-start\" : \"flex-end\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{\n                    wordWrap: \"break-word\",\n                    backgroundColor:\n                      item.user == userid ? \"#00ced1\" : \"#20b2aa\",\n                    borderRadius: 8,\n                    margin: 10,\n                    padding: 10,\n                    maxWidth: 300,\n                  }}\n                >\n                  {item.content}\n                </Typography>\n              </div>\n            ))}\n          {chat &&\n            chat.map((item) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent:\n                    item.user == userid ? \"flex-start\" : \"flex-end\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{\n                    wordWrap: \"break-word\",\n                    backgroundColor:\n                      item.user == userid ? \"#00ced1\" : \"#20b2aa\",\n                    borderRadius: 8,\n                    margin: 10,\n                    padding: 10,\n                    maxWidth: 300,\n                  }}\n                >\n                  {item.message}\n                </Typography>\n              </div>\n            ))}\n        </div>\n        <form\n          autoComplete=\"off\"\n          onSubmit={(e) => handleClick(e)}\n          style={{ marginTop: 10, flex: 1 }}\n        >\n          <TextField\n            autoComplete=\"off\"\n            id=\"search\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            style={{ width: \"100%\" }}\n            value={msg}\n            onChange={(e) => setMsg(e.target.value)}\n            size=\"small\"\n            InputProps={{\n              endAdornment: (\n                <IconButton color=\"secondary\" size=\"small\" type=\"submit\">\n                  <ArrowBackIos />\n                </IconButton>\n              ),\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  message: state.message.message,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default withRouter(connect(mapStateToProps, { load_msg })(Chat));\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PostCard.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BookmarkCard.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":23,"column":6,"nodeType":"243","endLine":23,"endColumn":35,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":42,"column":9,"nodeType":"247","endLine":42,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":71,"column":6,"nodeType":"243","endLine":71,"endColumn":35,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":14,"column":10,"nodeType":"251","messageId":"252","endLine":14,"endColumn":17},{"ruleId":"249","severity":1,"message":"253","line":14,"column":19,"nodeType":"251","messageId":"252","endLine":14,"endColumn":23},{"ruleId":"249","severity":1,"message":"254","line":45,"column":10,"nodeType":"251","messageId":"252","endLine":45,"endColumn":19},{"ruleId":"249","severity":1,"message":"255","line":45,"column":21,"nodeType":"251","messageId":"252","endLine":45,"endColumn":33},{"ruleId":"241","severity":1,"message":"256","line":68,"column":6,"nodeType":"243","endLine":68,"endColumn":14,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":131,"column":17,"nodeType":"260","messageId":"261","endLine":131,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":32,"column":6,"nodeType":"243","endLine":32,"endColumn":35,"suggestions":"262"},{"ruleId":"249","severity":1,"message":"263","line":9,"column":3,"nodeType":"251","messageId":"252","endLine":9,"endColumn":12},{"ruleId":"249","severity":1,"message":"264","line":86,"column":10,"nodeType":"251","messageId":"252","endLine":86,"endColumn":14},{"ruleId":"249","severity":1,"message":"254","line":89,"column":10,"nodeType":"251","messageId":"252","endLine":89,"endColumn":19},{"ruleId":"241","severity":1,"message":"265","line":102,"column":6,"nodeType":"243","endLine":102,"endColumn":14,"suggestions":"266"},{"ruleId":"249","severity":1,"message":"267","line":103,"column":9,"nodeType":"251","messageId":"252","endLine":103,"endColumn":25},{"ruleId":"249","severity":1,"message":"268","line":147,"column":9,"nodeType":"251","messageId":"252","endLine":147,"endColumn":26},{"ruleId":"249","severity":1,"message":"269","line":160,"column":9,"nodeType":"251","messageId":"252","endLine":160,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":31,"column":6,"nodeType":"243","endLine":31,"endColumn":35,"suggestions":"270"},{"ruleId":"249","severity":1,"message":"254","line":73,"column":10,"nodeType":"251","messageId":"252","endLine":73,"endColumn":19},{"ruleId":"249","severity":1,"message":"255","line":73,"column":21,"nodeType":"251","messageId":"252","endLine":73,"endColumn":33},{"ruleId":"241","severity":1,"message":"256","line":97,"column":6,"nodeType":"243","endLine":97,"endColumn":22,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":115,"column":9,"nodeType":"274","endLine":122,"endColumn":11},{"ruleId":"258","severity":1,"message":"259","line":215,"column":17,"nodeType":"260","messageId":"261","endLine":215,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":36,"column":6,"nodeType":"243","endLine":36,"endColumn":36,"suggestions":"275"},{"ruleId":"241","severity":1,"message":"276","line":31,"column":6,"nodeType":"243","endLine":31,"endColumn":8,"suggestions":"277"},{"ruleId":"249","severity":1,"message":"278","line":21,"column":8,"nodeType":"251","messageId":"252","endLine":21,"endColumn":13},{"ruleId":"241","severity":1,"message":"279","line":37,"column":6,"nodeType":"243","endLine":37,"endColumn":8,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":48,"column":5,"nodeType":"283","messageId":"284","endLine":63,"endColumn":6},{"ruleId":"241","severity":1,"message":"285","line":45,"column":6,"nodeType":"243","endLine":45,"endColumn":8,"suggestions":"286"},{"ruleId":"249","severity":1,"message":"287","line":49,"column":9,"nodeType":"251","messageId":"252","endLine":49,"endColumn":23},{"ruleId":"249","severity":1,"message":"288","line":53,"column":11,"nodeType":"251","messageId":"252","endLine":53,"endColumn":14},{"ruleId":"249","severity":1,"message":"288","line":81,"column":13,"nodeType":"251","messageId":"252","endLine":81,"endColumn":16},{"ruleId":"249","severity":1,"message":"288","line":110,"column":13,"nodeType":"251","messageId":"252","endLine":110,"endColumn":16},{"ruleId":"249","severity":1,"message":"288","line":139,"column":13,"nodeType":"251","messageId":"252","endLine":139,"endColumn":16},{"ruleId":"249","severity":1,"message":"288","line":509,"column":15,"nodeType":"251","messageId":"252","endLine":509,"endColumn":18},{"ruleId":"249","severity":1,"message":"288","line":543,"column":15,"nodeType":"251","messageId":"252","endLine":543,"endColumn":18},{"ruleId":"249","severity":1,"message":"289","line":19,"column":10,"nodeType":"251","messageId":"252","endLine":19,"endColumn":23},{"ruleId":"249","severity":1,"message":"290","line":75,"column":10,"nodeType":"251","messageId":"252","endLine":75,"endColumn":18},{"ruleId":"249","severity":1,"message":"291","line":76,"column":9,"nodeType":"251","messageId":"252","endLine":76,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":103,"column":15,"nodeType":"274","endLine":103,"endColumn":56},{"ruleId":"241","severity":1,"message":"292","line":41,"column":6,"nodeType":"243","endLine":41,"endColumn":35,"suggestions":"293"},{"ruleId":"241","severity":1,"message":"292","line":40,"column":6,"nodeType":"243","endLine":40,"endColumn":35,"suggestions":"294"},{"ruleId":"241","severity":1,"message":"292","line":50,"column":6,"nodeType":"243","endLine":50,"endColumn":35,"suggestions":"295"},{"ruleId":"249","severity":1,"message":"296","line":7,"column":3,"nodeType":"251","messageId":"252","endLine":7,"endColumn":19},{"ruleId":"249","severity":1,"message":"297","line":8,"column":3,"nodeType":"251","messageId":"252","endLine":8,"endColumn":16},{"ruleId":"298","severity":1,"message":"299","line":20,"column":1,"nodeType":"300","endLine":76,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":47,"column":1,"nodeType":"300","endLine":205,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":9,"column":1,"nodeType":"300","endLine":28,"endColumn":2},{"ruleId":"249","severity":1,"message":"301","line":1,"column":28,"nodeType":"251","messageId":"252","endLine":1,"endColumn":34},{"ruleId":"249","severity":1,"message":"302","line":1,"column":36,"nodeType":"251","messageId":"252","endLine":1,"endColumn":44},{"ruleId":"241","severity":1,"message":"303","line":21,"column":6,"nodeType":"243","endLine":21,"endColumn":8,"suggestions":"304"},{"ruleId":"249","severity":1,"message":"305","line":22,"column":9,"nodeType":"251","messageId":"252","endLine":22,"endColumn":16},{"ruleId":"249","severity":1,"message":"306","line":25,"column":9,"nodeType":"251","messageId":"252","endLine":25,"endColumn":20},{"ruleId":"249","severity":1,"message":"307","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":17},{"ruleId":"249","severity":1,"message":"308","line":3,"column":16,"nodeType":"251","messageId":"252","endLine":3,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":40,"column":6,"nodeType":"243","endLine":40,"endColumn":35,"suggestions":"309"},{"ruleId":"241","severity":1,"message":"310","line":39,"column":6,"nodeType":"243","endLine":39,"endColumn":12,"suggestions":"311"},{"ruleId":"258","severity":1,"message":"259","line":97,"column":31,"nodeType":"260","messageId":"261","endLine":97,"endColumn":33},{"ruleId":"258","severity":1,"message":"259","line":105,"column":33,"nodeType":"260","messageId":"261","endLine":105,"endColumn":35},{"ruleId":"258","severity":1,"message":"259","line":122,"column":31,"nodeType":"260","messageId":"261","endLine":122,"endColumn":33},{"ruleId":"258","severity":1,"message":"259","line":130,"column":33,"nodeType":"260","messageId":"261","endLine":130,"endColumn":35},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetState'. Either include it or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["314"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["315"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'openPopup' is assigned a value but never used.","'setOpenPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'page'. Either include them or remove the dependency array.",["316"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["317"],"'CardMedia' is defined but never used.","'page' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'load_likes' and 'load_post'. Either include them or remove the dependency array. If 'load_post' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["318"],"'AddCommentHandle' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["319"],["320"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["321"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["322"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'load_user'. Either include it or remove the dependency array. If 'load_user' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'load_bookmark' and 'page'. Either include them or remove the dependency array. If 'load_bookmark' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["324"],"'BookmarkHandle' is assigned a value but never used.","'res' is assigned a value but never used.","'load_bookmark' is defined but never used.","'expanded' is assigned a value but never used.","'handleExpand' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'resetState' and 'setOpenPopup'. Either include them or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["325"],["326"],["327"],"'BOOKMARK_SUCCESS' is defined but never used.","'BOOKMARK_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useRef' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'load_rooms'. Either include it or remove the dependency array. If 'load_rooms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["328"],"'classes' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'PropTypes' is defined but never used.","'withRouter' is defined but never used.",["329"],"React Hook useEffect has missing dependencies: 'client' and 'load_msg'. Either include them or remove the dependency array. If 'load_msg' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["330"],"no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"334","fix":"335"},{"desc":"331","fix":"336"},{"desc":"337","fix":"338"},{"desc":"331","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},{"desc":"350","fix":"353"},{"desc":"354","fix":"355"},{"desc":"331","fix":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState]",{"range":"359","text":"360"},{"range":"361","text":"360"},"Update the dependencies array to be: [fetchData, page, search]",{"range":"362","text":"363"},{"range":"364","text":"360"},"Update the dependencies array to be: [load_likes, load_post, postId]",{"range":"365","text":"366"},{"range":"367","text":"360"},"Update the dependencies array to be: [fetchData, page, search, userId]",{"range":"368","text":"369"},"Update the dependencies array to be: [requestFail, isAuthenticated, resetState]",{"range":"370","text":"371"},"Update the dependencies array to be: [props]",{"range":"372","text":"373"},"Update the dependencies array to be: [load_user]",{"range":"374","text":"375"},"Update the dependencies array to be: [load_bookmark, page]",{"range":"376","text":"377"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState, setOpenPopup]",{"range":"378","text":"379"},{"range":"380","text":"379"},{"range":"381","text":"379"},"Update the dependencies array to be: [load_rooms]",{"range":"382","text":"383"},{"range":"384","text":"360"},"Update the dependencies array to be: [client, load_msg, room]",{"range":"385","text":"386"},[569,598],"[requestFail, requestSuccess, resetState]",[1889,1918],[1662,1670],"[fetchData, page, search]",[742,771],[2272,2280],"[load_likes, load_post, postId]",[811,840],[2344,2360],"[fetchData, page, search, userId]",[899,929],"[requestFail, isAuthenticated, resetState]",[1127,1129],"[props]",[985,987],"[load_user]",[1068,1070],"[load_bookmark, page]",[1026,1055],"[requestFail, requestSuccess, resetState, setOpenPopup]",[1045,1074],[1389,1418],[596,598],"[load_rooms]",[972,1001],[1385,1391],"[client, load_msg, room]"]