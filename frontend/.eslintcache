[{"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/index.js":"1","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/App.js":"2","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/store.js":"3","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Home.js":"4","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Login.js":"5","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Setting.js":"6","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Search.js":"7","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Bookmark.js":"8","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Activate.js":"9","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/DetailPage.js":"10","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/UserProfile.js":"11","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Messages.js":"12","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/List.js":"13","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Notification.js":"14","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/NewPost.js":"15","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPassword.js":"16","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPasswordConfirm.js":"17","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Chat.js":"18","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PageNotFound.js":"19","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ScrollToTop.js":"20","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/hocs/Layout.js":"21","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Signup.js":"22","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PostCard.js":"23","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetEmail.js":"24","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetPassword.js":"25","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetUserDetail.js":"26","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Popup.js":"27","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/DialogAlert.js":"28","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BookmarkCard.js":"29","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/auth.js":"30","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/blog.js":"31","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/message.js":"32","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/utils/linkify.js":"33","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Appbar.js":"34","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Footer.js":"35","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BottomBar.js":"36","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/NotifCard.js":"37","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/index.js":"38","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/types.js":"39","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/message.js":"40","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/blog.js":"41","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/auth.js":"42","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResumeCreator.js":"43","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/resume.js":"44","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/resume.js":"45","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetEducation.js":"46","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetLanguage.js":"47","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetJobHistory.js":"48","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetSkill.js":"49","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetInfo.js":"50","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/InfoPage.js":"51","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/JobHistory.js":"52","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/Skills.js":"53","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/Language.js":"54","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/Education.js":"55"},{"size":218,"mtime":1653131642572,"results":"56","hashOfConfig":"57"},{"size":2574,"mtime":1654518377973,"results":"58","hashOfConfig":"57"},{"size":440,"mtime":1607278797865,"results":"59","hashOfConfig":"57"},{"size":1673,"mtime":1654002605072,"results":"60","hashOfConfig":"57"},{"size":3438,"mtime":1654512687206,"results":"61","hashOfConfig":"57"},{"size":7053,"mtime":1654590002958,"results":"62","hashOfConfig":"57"},{"size":3715,"mtime":1654342678438,"results":"63","hashOfConfig":"57"},{"size":1825,"mtime":1654003226583,"results":"64","hashOfConfig":"57"},{"size":1427,"mtime":1654006155002,"results":"65","hashOfConfig":"57"},{"size":9529,"mtime":1654542317659,"results":"66","hashOfConfig":"57"},{"size":6760,"mtime":1654268041508,"results":"67","hashOfConfig":"57"},{"size":3076,"mtime":1654262624438,"results":"68","hashOfConfig":"57"},{"size":3496,"mtime":1654265372179,"results":"69","hashOfConfig":"57"},{"size":1710,"mtime":1654003320597,"results":"70","hashOfConfig":"57"},{"size":2601,"mtime":1653473017460,"results":"71","hashOfConfig":"57"},{"size":2256,"mtime":1652782103899,"results":"72","hashOfConfig":"57"},{"size":4006,"mtime":1654515108690,"results":"73","hashOfConfig":"57"},{"size":6024,"mtime":1654003249678,"results":"74","hashOfConfig":"57"},{"size":339,"mtime":1626470253280,"results":"75","hashOfConfig":"57"},{"size":333,"mtime":1653806496515,"results":"76","hashOfConfig":"57"},{"size":2727,"mtime":1653736974113,"results":"77","hashOfConfig":"57"},{"size":6443,"mtime":1654512175461,"results":"78","hashOfConfig":"57"},{"size":2147,"mtime":1654542332852,"results":"79","hashOfConfig":"57"},{"size":4045,"mtime":1654513290636,"results":"80","hashOfConfig":"57"},{"size":4738,"mtime":1654513205676,"results":"81","hashOfConfig":"57"},{"size":5224,"mtime":1654590043507,"results":"82","hashOfConfig":"57"},{"size":1296,"mtime":1653551158212,"results":"83","hashOfConfig":"57"},{"size":943,"mtime":1626403496489,"results":"84","hashOfConfig":"57"},{"size":2068,"mtime":1654542324195,"results":"85","hashOfConfig":"57"},{"size":15375,"mtime":1654513747434,"results":"86","hashOfConfig":"57"},{"size":6197,"mtime":1654259060987,"results":"87","hashOfConfig":"57"},{"size":1661,"mtime":1654071231286,"results":"88","hashOfConfig":"57"},{"size":920,"mtime":1654501889929,"results":"89","hashOfConfig":"57"},{"size":4119,"mtime":1654518483561,"results":"90","hashOfConfig":"57"},{"size":426,"mtime":1653473884152,"results":"91","hashOfConfig":"57"},{"size":1926,"mtime":1654501349314,"results":"92","hashOfConfig":"57"},{"size":2423,"mtime":1654332895923,"results":"93","hashOfConfig":"57"},{"size":267,"mtime":1654531143301,"results":"94","hashOfConfig":"57"},{"size":3804,"mtime":1654685340841,"results":"95","hashOfConfig":"57"},{"size":1098,"mtime":1654026441973,"results":"96","hashOfConfig":"57"},{"size":3447,"mtime":1654340513834,"results":"97","hashOfConfig":"57"},{"size":5861,"mtime":1654513813260,"results":"98","hashOfConfig":"57"},{"size":1106,"mtime":1654624699265,"results":"99","hashOfConfig":"57"},{"size":4246,"mtime":1654687795018,"results":"100","hashOfConfig":"57"},{"size":1318,"mtime":1654691739252,"results":"101","hashOfConfig":"57"},{"size":3964,"mtime":1654691638792,"results":"102","hashOfConfig":"57"},{"size":3097,"mtime":1654691985705,"results":"103","hashOfConfig":"57"},{"size":4206,"mtime":1654691863694,"results":"104","hashOfConfig":"57"},{"size":3070,"mtime":1654692298062,"results":"105","hashOfConfig":"57"},{"size":3240,"mtime":1654610932374,"results":"106","hashOfConfig":"57"},{"size":3439,"mtime":1654701168754,"results":"107","hashOfConfig":"57"},{"size":2620,"mtime":1654690018023,"results":"108","hashOfConfig":"57"},{"size":1855,"mtime":1654690217609,"results":"109","hashOfConfig":"57"},{"size":1923,"mtime":1654690109726,"results":"110","hashOfConfig":"57"},{"size":2552,"mtime":1654689951127,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"k84zhf",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"114"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"114"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/index.js",[],["261","262"],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/App.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/store.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Home.js",["263","264"],"import React, { useEffect, useState } from \"react\";\nimport { Typography, makeStyles, CircularProgress } from \"@material-ui/core\";\nimport PostCard from \"../components/PostCard\";\nimport { connect } from \"react-redux\";\nimport { load_posts } from \"../actions/blog\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst useStyles = makeStyles((theme) => ({\n  noItemContainer: {\n    textAlign: \"center\",\n    marginTop: 140,\n    marginBottom: 140,\n  },\n  loader: {\n    textAlign: \"center\",\n  },\n}));\nconst Home = ({ posts, load_posts, count }) => {\n  const [page, setPage] = useState(2);\n  const classes = useStyles();\n\n  useEffect(() => {\n    load_posts(1, false);\n    setPage(2);\n  }, []);\n  const fetchData = async () => {\n    await load_posts(page, false);\n    setPage(page + 1);\n  };\n  return (\n    <div>\n      {posts ? (\n        <InfiniteScroll\n          dataLength={posts.length}\n          next={fetchData}\n          hasMore={count > posts.length}\n          loader={\n            <div className={classes.loader}>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          }\n          endMessage={\n            <div className={classes.loader}>\n              <p>...</p>\n            </div>\n          }\n        >\n          {posts.map((post) => (\n            <PostCard post={post} />\n          ))}\n        </InfiniteScroll>\n      ) : (\n        <div className={classes.noItemContainer}>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.blog.posts,\n  count: state.blog.count,\n});\nexport default connect(mapStateToProps, {\n  load_posts,\n})(Home);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Login.js",["265"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n}));\nconst Login = ({\n  login,\n  isAuthenticated,\n  requestFail,\n  resetState,\n  login_error,\n}) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (isAuthenticated) {\n      resetState();\n    }\n  }, [requestFail, isAuthenticated]);\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    login(email, password);\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant=\"h5\">ورود</Typography>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            error={login_error && login_error.detail && true}\n            helperText={\n              login_error && login_error.detail && \"رمز یا ایمیل اشتباه است\"\n            }\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"رمز عبور\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"4\"\n            required\n          />\n        </div>\n        <Button\n          type=\"submit\"\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ورود\n        </Button>\n      </form>\n      <Typography variant=\"body1\">\n        قبلا ثبت نام نکرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/signup\">\n          ثبت نام\n        </Link>\n      </Typography>\n      <Typography variant=\"body1\">\n        رمز عبورتان را فراموش کرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/reset_password\">\n          بازیابی\n        </Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n  login_error: state.auth.login_error,\n});\n\nexport default connect(mapStateToProps, { login, resetState })(Login);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Setting.js",["266","267","268"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  LinearProgress,\r\n  IconButton,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_user, update_avatar } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport { Edit, AddAPhotoTwoTone } from \"@material-ui/icons\";\r\nimport SetEmail from \"../containers/SetEmail\";\r\nimport SetPassword from \"../containers/SetPassword\";\r\nimport Popup from \"../components/Popup\";\r\nimport SetUserDetail from \"../containers/SetUserDetail\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    height: 90,\r\n    width: 90,\r\n    marginLeft: 40,\r\n    marginTop: -50,\r\n    border: \"4px solid\",\r\n    borderColor: `${theme.palette.primary.border}`,\r\n  },\r\n  editButtonContainer: { flex: 1, display: \"flex\", justifyContent: \"flex-end\" },\r\n  header: {\r\n    width: \"100%\",\r\n    height: 150,\r\n    objectFit: \"cover\",\r\n  },\r\n  detailContainer: { padding: 20 },\r\n  imageContainer: {\r\n    position: \"relative\",\r\n  },\r\n  editHeader: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n  },\r\n  editAvatar: {\r\n    position: \"absolute\",\r\n    top: 35,\r\n    left: 75,\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n}));\r\nconst Setting = ({\r\n  user,\r\n  load_user,\r\n  logout,\r\n  isAuthenticated,\r\n  update_avatar,\r\n}) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await load_user();\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [childComponent, setchildComponent] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\r\n\r\n  const handleDialog = (btnname) => {\r\n    setchildComponent(btnname);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  function ChildrenComponent({ value }) {\r\n    switch (value) {\r\n      case \"ویرایش مشخصات\":\r\n        return (\r\n          <SetUserDetail\r\n            _id={user.id}\r\n            _name={user.name}\r\n            _profile_name={user.profile_name}\r\n            _bio={user.bio}\r\n            _phone_no={user.phone_no}\r\n            _birth_date={user.birth_date}\r\n            setOpenPopup={setOpenPopup}\r\n          />\r\n        );\r\n      case \"تغییر ایمیل\":\r\n        return <SetEmail setOpenPopup={setOpenPopup} />;\r\n      case \"تغییر رمز عبور\":\r\n        return <SetPassword setOpenPopup={setOpenPopup} />;\r\n    }\r\n  }\r\n  async function uploadAvatar(e) {\r\n    const image = e.target.files[0];\r\n    update_avatar(image, \"avatar\");\r\n  }\r\n  async function uploadHeader(e) {\r\n    const image = e.target.files[0];\r\n    update_avatar(image, \"header\");\r\n  }\r\n  return user ? (\r\n    <div>\r\n      <div className={classes.imageContainer}>\r\n        <img\r\n          src={\r\n            user.header || `${process.env.REACT_APP_API_URL}/media/header.jpg`\r\n          }\r\n          className={classes.header}\r\n          onError={(e) => {\r\n            e.target.src = `${process.env.REACT_APP_API_URL}/media/header.jpg`;\r\n          }}\r\n        />\r\n        <label htmlFor=\"contained-button-file1\" className={classes.editHeader}>\r\n          <input\r\n            accept=\"image/*\"\r\n            id=\"contained-button-file1\"\r\n            // multiple\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            onChange={uploadHeader}\r\n          />\r\n          <AddAPhotoTwoTone className={classes.icon} />\r\n        </label>\r\n      </div>\r\n\r\n      <div className={classes.imageContainer}>\r\n        <Avatar className={classes.avatar} src={user.image} />\r\n        <div>\r\n          <label htmlFor=\"contained-button-file\" className={classes.editAvatar}>\r\n            <input\r\n              accept=\"image/*\"\r\n              id=\"contained-button-file\"\r\n              // multiple\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              onChange={uploadAvatar}\r\n            />\r\n            <AddAPhotoTwoTone className={classes.icon} />\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.editButtonContainer}>\r\n        <Button\r\n          style={{ margin: 10 }}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          onClick={() => handleDialog(\"ویرایش مشخصات\")}\r\n        >\r\n          ویرایش مشخصات\r\n        </Button>\r\n      </div>\r\n      <div className={classes.detailContainer}>\r\n        <Divider />\r\n\r\n        <Typography variant=\"h6\">نام کاربری</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          {user.name ? user.name : \"--\"}@\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <Typography variant=\"h6\">نام</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          {user.profile_name ? user.profile_name : \"--\"}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">بیو</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          {user.bio ? user.bio : \"--\"}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">تلفن</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          {user.phone_no ? user.phone_no : \"--\"}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">تاریخ تولد</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          {user.birth_date\r\n            ? jMoment(user.birth_date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")\r\n            : \"--\"}\r\n        </Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">ایمیل</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          {user.email ? user.email : \"--\"}\r\n          <IconButton onClick={() => handleDialog(\"تغییر ایمیل\")}>\r\n            <Edit />\r\n          </IconButton>\r\n        </Typography>\r\n        <Divider />\r\n        <Typography variant=\"h6\">رمز عبور</Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          ******\r\n          <IconButton onClick={() => handleDialog(\"تغییر رمز عبور\")}>\r\n            <Edit />\r\n          </IconButton>\r\n        </Typography>\r\n        <Divider />\r\n        <Link\r\n          style={{\r\n            textDecoration: \"none\",\r\n            marginTop: 20,\r\n            padding: 10,\r\n          }}\r\n          onClick={() => logout()}\r\n        >\r\n          <Typography color=\"error\" variant=\"h6\">\r\n            خروج\r\n          </Typography>\r\n        </Link>\r\n      </div>\r\n      <Popup\r\n        title={childComponent}\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <ChildrenComponent value={childComponent} />\r\n      </Popup>\r\n    </div>\r\n  ) : (\r\n    <LinearProgress color=\"secondary\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { load_user, logout, update_avatar })(\r\n  Setting\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Search.js",["269","270","271"],"import React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  makeStyles,\n  CircularProgress,\n  TextField,\n  Divider,\n  Toolbar,\n} from \"@material-ui/core\";\nimport PostCard from \"../components/PostCard\";\nimport { connect } from \"react-redux\";\nimport { load_posts } from \"../actions/blog\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { SearchSharp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  loader: {\n    textAlign: \"center\",\n  },\n  textField: { width: \"100%\" },\n  form: {\n    padding: 10,\n    position: \"fixed\",\n    left: 0,\n    right: 0,\n    top: 0,\n    backgroundColor: `${theme.palette.primary.border}`,\n  },\n}));\nconst Search = ({ posts, load_posts, count, history }) => {\n  const [page, setPage] = useState(1);\n  const classes = useStyles();\n  const [search, setSearch] = useState(\n    getQueryVariable(\"keyword\") ? getQueryVariable(\"keyword\") : \"\"\n  );\n  useEffect(() => {\n    if (getQueryVariable(\"keyword\")) {\n      load_posts(1, getQueryVariable(\"keyword\"));\n      setPage(2);\n    }\n  }, []);\n\n  const submit = (e) => {\n    e.preventDefault();\n    const currentUrlParams = new URLSearchParams();\n    currentUrlParams.set(\"keyword\", search);\n    if (window.location.pathname === \"/search\") {\n      history.push(\n        window.location.pathname + \"?\" + currentUrlParams.toString()\n      );\n    } else {\n      window.location.replace(\"/?keyword=\" + search);\n    }\n    load_posts(1, search);\n    setPage(2);\n  };\n  const fetchData = async () => {\n    console.log(\"fetch\", page, search);\n    await load_posts(page, search);\n    setPage(page + 1);\n  };\n  return (\n    <div>\n      <Toolbar />\n      {posts && (\n        <InfiniteScroll\n          dataLength={posts.length}\n          next={fetchData}\n          hasMore={count > posts.length}\n          loader={\n            <div className={classes.loader}>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          }\n          endMessage={\n            <div className={classes.loader}>\n              <p>...</p>\n            </div>\n          }\n        >\n          {posts.map((post) => (\n            <PostCard post={post} />\n          ))}\n        </InfiniteScroll>\n      )}\n      <div className={classes.form}>\n        <Toolbar />\n        <form autoComplete=\"off\" onSubmit={(e) => submit(e)}>\n          <TextField\n            autoComplete=\"off\"\n            id=\"search\"\n            placeholder=\"جستجو\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            className={classes.textField}\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            size=\"small\"\n            InputProps={{\n              endAdornment: (\n                <IconButton color=\"inherit\" size=\"small\" type=\"submit\">\n                  <SearchSharp />\n                </IconButton>\n              ),\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n\n  function getQueryVariable(variable) {\n    var query = decodeURI(window.location.search.substring(1)).replace(\n      /\\+/g,\n      \" \"\n    );\n    //console.log(query); //\"app=article&act=news_content&aid=160990\"\n    var vars = query.split(\"&\");\n    //console.log(vars); //[ 'app=article', 'act=news_content', 'aid=160990' ]\n    for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split(\"=\");\n      //console.log(pair); //[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\n      if (pair[0] == variable) {\n        return pair[1];\n      }\n    }\n    return false;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.blog.search_posts,\n  count: state.blog.search_count,\n});\nexport default connect(mapStateToProps, {\n  load_posts,\n})(Search);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Bookmark.js",["272"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_bookmark, bookmark } from \"../actions/auth\";\r\nimport { makeStyles, CircularProgress } from \"@material-ui/core\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport BookmarkCard from \"../components/BookmarkCard\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loader: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\nconst Bookmark = ({\r\n  load_bookmark,\r\n  bookmarkList,\r\n  bookmark,\r\n  bookmark_count,\r\n  isAuthenticated,\r\n}) => {\r\n  const [page, setPage] = useState(2);\r\n\r\n  useEffect(() => {\r\n    load_bookmark(1);\r\n    setPage(2);\r\n  }, []);\r\n  const fetchData = async () => {\r\n    await load_bookmark(page);\r\n    setPage(page + 1);\r\n  };\r\n  const classes = useStyles();\r\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\r\n\r\n  return bookmarkList ? (\r\n    <div>\r\n      <InfiniteScroll\r\n        dataLength={bookmarkList.length}\r\n        next={fetchData}\r\n        hasMore={bookmark_count > bookmarkList.length}\r\n        loader={\r\n          <div className={classes.loader}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </div>\r\n        }\r\n        endMessage={\r\n          <div className={classes.loader}>\r\n            <p>...</p>\r\n          </div>\r\n        }\r\n      >\r\n        {bookmarkList.map((post) => (\r\n          <BookmarkCard post={post} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  ) : (\r\n    <CircularProgress color=\"secondary\" />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  bookmarkList: state.auth.bookmarks,\r\n  bookmark_count: state.auth.bookmark_count,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { load_bookmark, bookmark })(Bookmark);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Activate.js",["273"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { verify, resetState } from \"../actions/auth\";\nimport { Button, Typography, LinearProgress } from \"@material-ui/core\";\n\nconst Activate = ({\n  requestSuccess,\n  verify,\n  match,\n  resetState,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const verify_account = (e) => {\n    const uid = match.params.uid;\n    const token = match.params.token;\n    verify(uid, token);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/login\" />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      {requestSent && <LinearProgress />}\n      <Typography variant=\"h5\">تایید ایمیل</Typography>\n      <Button\n        style={{ margin: 20 }}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={verify_account}\n      >\n        تایید\n      </Button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { verify, resetState })(Activate);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/DetailPage.js",["274","275","276","277","278","279","280"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  IconButton,\r\n  LinearProgress,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  BookmarkBorder,\r\n  Bookmark,\r\n  FavoriteBorder,\r\n  Favorite,\r\n} from \"@material-ui/icons\";\r\nimport DialogAlert from \"../components/DialogAlert\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_post, load_replies, like, load_likes } from \"../actions/blog\";\r\nimport { bookmark } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport linkify from \"../utils/linkify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  commentContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 250,\r\n  },\r\n  commentCard: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n    minHeight: 150,\r\n  },\r\n  paper: {\r\n    height: 250,\r\n  },\r\n  summery: {\r\n    margin: `${theme.spacing(2)}px`,\r\n  },\r\n  collapseTitle: { flex: 1 },\r\n  paginatorDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  emptyDiv: {\r\n    textAlign: \"center\",\r\n    height: 600,\r\n  },\r\n  carousel: { height: 400 },\r\n  off: {\r\n    backgroundColor: \"#f44336\",\r\n    borderRadius: 15,\r\n    color: \"#fff\",\r\n    paddingRight: 8,\r\n    paddingLeft: 8,\r\n    display: \"inline-block\",\r\n    margin: 10,\r\n  },\r\n  discountPrice: {\r\n    display: \"inline-block\",\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  para: {\r\n    fontSize: 17,\r\n  },\r\n}));\r\nconst DetailPage = ({\r\n  post,\r\n  likes,\r\n  load_post,\r\n  load_likes,\r\n  match,\r\n  isAuthenticated,\r\n  bookmark,\r\n  like,\r\n  load_replies,\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  const classes = useStyles();\r\n  const postId = match.params.postId;\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [alert, setAlert] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    message: \"\",\r\n    actionUrl: \"\",\r\n    actionText: \"\",\r\n  });\r\n  useEffect(() => {\r\n    load_post(postId);\r\n    load_likes(postId, 1);\r\n    //load_replies(itemId, 1);\r\n    window.scrollTo(0, 0);\r\n  }, [postId]);\r\n  const AddCommentHandle = () => {\r\n    if (isAuthenticated === true) {\r\n      setOpenPopup(true);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const BookmarkHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      bookmark(id, false);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const LikeHandle = (id) => {\r\n    if (isAuthenticated === true) {\r\n      like(id);\r\n    } else {\r\n      setAlert({\r\n        isOpen: true,\r\n        title: \"!\",\r\n        message: \"لطفا وارد شوید یا ثبت نام کنید.\",\r\n        actionUrl: \"/login\",\r\n        actionText: \"ورود\",\r\n      });\r\n    }\r\n  };\r\n  const [expand, setExpand] = React.useState({\r\n    detail: false,\r\n    summery: false,\r\n  });\r\n  const { detail, summery } = expand;\r\n  const handleExpandClick = (name) => {\r\n    if (name === \"detail\") {\r\n      setExpand({\r\n        detail: !detail,\r\n        summery: false,\r\n      });\r\n    } else {\r\n      setExpand({\r\n        detail: false,\r\n        summery: !summery,\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    load_replies(postId, value);\r\n  };\r\n\r\n  return post ? (\r\n    <>\r\n      <Grid container>\r\n        <Grid xs={12} sm={6}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Link\r\n              className={classes.navLink}\r\n              exact\r\n              to={`/profile/${post.user_name}/`}\r\n            >\r\n              <Avatar\r\n                style={{ height: 50, width: 50, margin: 10 }}\r\n                src={post.user_image}\r\n              />\r\n            </Link>\r\n            <div>\r\n              <Link\r\n                className={classes.navLink}\r\n                exact\r\n                to={`/profile/${post.user_name}/`}\r\n              >\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    {post.user_name}@\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" style={{ marginRight: 4 }}>\r\n                    {post.profile_name}\r\n                  </Typography>\r\n                  {post.user_verified && (\r\n                    <img\r\n                      src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\r\n                      style={{ height: 12, marginRight: 4 }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </Link>\r\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                {jMoment(post.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid xs={12} sm={6}>\r\n          <div\r\n            style={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Link\r\n              className={classes.navLink}\r\n              exact\r\n              to={`/list/like/${post.id}/`}\r\n            >\r\n              <IconButton>\r\n                <Typography color=\"textSecondary\" variant=\"h6\">\r\n                  {post.like_count}\r\n                </Typography>\r\n              </IconButton>\r\n              <IconButton>\r\n                {likes &&\r\n                  likes\r\n                    .slice(0, 3)\r\n                    .reverse()\r\n                    .map((like) => (\r\n                      <Avatar\r\n                        src={like.user_image}\r\n                        style={{ height: 25, width: 25, marginLeft: -8 }}\r\n                      />\r\n                    ))}\r\n              </IconButton>\r\n            </Link>\r\n            <IconButton onClick={() => LikeHandle(post.id)}>\r\n              {post.liked ? (\r\n                <Favorite color=\"error\" style={{ fontSize: 25 }} />\r\n              ) : (\r\n                <FavoriteBorder color=\"error\" style={{ fontSize: 25 }} />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"secondary\"\r\n              onClick={() => BookmarkHandle(post.id)}\r\n            >\r\n              {post.bookmarked ? (\r\n                <Bookmark style={{ fontSize: 25 }} />\r\n              ) : (\r\n                <BookmarkBorder style={{ fontSize: 25 }} />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div className={classes.summery}>\r\n        <p\r\n          className={classes.para}\r\n          dangerouslySetInnerHTML={{ __html: linkify(post.content) }}\r\n        />\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      {/* <Card className={classes.commentContainer}>\r\n        <Button\r\n          color='secondary'\r\n          variant='outlined'\r\n          onClick={() => AddCommentHandle()}>\r\n          ثبت نظر\r\n        </Button>\r\n        <Grid container spacing={1}>\r\n          {comments &&\r\n            comments.comments.length > 0 &&\r\n            comments.comments.map((comment) => (\r\n              <Grid item xs={12} md={6}>\r\n                <Card variant='outlined' className={classes.commentCard}>\r\n                  <Typography color='textSecondary' variant='subtitle2'>\r\n                    {jMoment(comment.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n                  </Typography>\r\n                  <Typography variant='subtitle2'>\r\n                    {comment.user_name}\r\n                  </Typography>\r\n                  <Typography variant='body1'>{comment.title}</Typography>\r\n                  <Rating name='read-only' value={comment.star} readOnly />\r\n                  <Typography variant='body1'>{comment.description}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {comments && comments.count > 1 && (\r\n          <div className={classes.paginatorDiv}>\r\n            <Pagination\r\n              count={comments.count}\r\n              page={page}\r\n              color='secondary'\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </Card>\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      \r\n      <Popup\r\n        title={\"ثبت نظر\"}\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}>\r\n        <SetComment id={post.id} setOpenPopup={setOpenPopup} />\r\n      </Popup> */}\r\n      <DialogAlert alert={alert} setAlert={setAlert} />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <LinearProgress color=\"secondary\" />\r\n      <div className={classes.emptyDiv}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.blog.post,\r\n  likes: state.blog.likes,\r\n  //comments: state.shop.comments,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    load_post,\r\n    load_likes,\r\n    bookmark,\r\n    like,\r\n    load_replies,\r\n  })(DetailPage)\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/UserProfile.js",["281","282","283"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Typography,\r\n  makeStyles,\r\n  LinearProgress,\r\n  CircularProgress,\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { load_profile, load_user_posts } from \"../actions/blog\";\r\nimport { follow_unfollw } from \"../actions/auth\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { MailOutline } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    marginTop: `${theme.spacing(2)}px`,\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  avatar: {\r\n    height: 90,\r\n    width: 90,\r\n    marginLeft: 40,\r\n    marginTop: -50,\r\n    border: \"4px solid\",\r\n    borderColor: `${theme.palette.primary.border}`,\r\n  },\r\n  noItemContainer: {\r\n    textAlign: \"center\",\r\n    marginTop: 140,\r\n    marginBottom: 140,\r\n  },\r\n  loader: {\r\n    textAlign: \"center\",\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    padding: 10,\r\n    flex: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  navLinkFollower: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    marginRight: 20,\r\n    marginTop: 20,\r\n  },\r\n}));\r\nconst UserProfile = ({\r\n  match,\r\n  isAuthenticated,\r\n  load_profile,\r\n  profile,\r\n  userposts,\r\n  history,\r\n  load_user_posts,\r\n  follow_unfollw,\r\n  user,\r\n  count,\r\n}) => {\r\n  const [chatId, setChatId] = useState(false);\r\n  const [page, setPage] = useState(2);\r\n\r\n  const classes = useStyles();\r\n  const userName = match.params.name;\r\n\r\n  useEffect(() => {\r\n    load_profile(userName);\r\n    load_user_posts(userName, 1);\r\n    setPage(2);\r\n  }, [userName]);\r\n\r\n  const fetchData = async () => {\r\n    await load_user_posts(userName, page);\r\n    setPage(page + 1);\r\n  };\r\n  async function get_chat() {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/message/getroom/${user.id}/${profile.id}/`,\r\n        config\r\n      );\r\n      setChatId(res.data.room_id);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n  if (chatId !== false) return <Redirect to={`/chat/${chatId}/`} />;\r\n\r\n  return profile ? (\r\n    <>\r\n      <img\r\n        src={\r\n          profile.header || `${process.env.REACT_APP_API_URL}/media/header.jpg`\r\n        }\r\n        style={{\r\n          width: \"100%\",\r\n          height: 150,\r\n          objectFit: \"cover\",\r\n        }}\r\n        onError={(e) => {\r\n          e.target.src = `${process.env.REACT_APP_API_URL}/media/header.jpg`;\r\n        }}\r\n      />\r\n      <Avatar className={classes.avatar} src={profile.image} />\r\n      <div className={classes.pageContainer}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography variant='h5'>{profile.profile_name}</Typography>\r\n\r\n              {profile.is_verified && (\r\n                <img\r\n                  src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\r\n                  style={{ height: 18, marginRight: 10 }}\r\n                />\r\n              )}\r\n            </div>\r\n            <Typography variant='body1' color='textSecondary'>\r\n              {profile.name}@\r\n            </Typography>\r\n            <Typography color='textSecondary' variant='subtitle2'>\r\n              عضو از :\r\n              {jMoment(profile.join_date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\r\n            </Typography>\r\n          </div>\r\n          {isAuthenticated && user.id !== profile.id && (\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}>\r\n              <IconButton onClick={() => get_chat()} style={{ marginLeft: 10 }}>\r\n                <MailOutline color='secondary' />\r\n              </IconButton>\r\n\r\n              <Button\r\n                color='secondary'\r\n                onClick={() => follow_unfollw(userName)}\r\n                style={{ marginLeft: 10 }}>\r\n                {profile.followed === true ? \"آنفالو\" : \"فالو\"}\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {isAuthenticated && user.id === profile.id && (\r\n            <Link className={classes.navLink} to='/setting'>\r\n              <Typography color='secondary' variant='body1'>\r\n                ویرایش پروفایل\r\n              </Typography>\r\n            </Link>\r\n          )}\r\n        </div>\r\n        {profile.bio && (\r\n          <Typography style={{ marginTop: 10 }}>{profile.bio}</Typography>\r\n        )}\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Link\r\n            className={classes.navLinkFollower}\r\n            to={`/list/follower/${userName}`}>\r\n            <Typography color='textSecondary' variant='subtitle2'>\r\n              دنبال کننده : {profile.followers}\r\n            </Typography>\r\n          </Link>\r\n          <Link\r\n            className={classes.navLinkFollower}\r\n            to={`/list/following/${userName}`}>\r\n            <Typography color='textSecondary' variant='subtitle2'>\r\n              دنبال میکند : {profile.followings}\r\n            </Typography>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      {userposts && (\r\n        <InfiniteScroll\r\n          dataLength={userposts.length}\r\n          next={fetchData}\r\n          hasMore={count > userposts.length}\r\n          loader={\r\n            <div className={classes.loader}>\r\n              <CircularProgress color='secondary' />\r\n            </div>\r\n          }\r\n          endMessage={\r\n            <div className={classes.loader}>\r\n              <p>...</p>\r\n            </div>\r\n          }>\r\n          {userposts.map((post) => (\r\n            <PostCard post={post} />\r\n          ))}\r\n        </InfiniteScroll>\r\n      )}\r\n    </>\r\n  ) : (\r\n    <>\r\n      <LinearProgress color='secondary' />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n  profile: state.blog.profile,\r\n  userposts: state.blog.userposts,\r\n  count: state.blog.profile_count,\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    load_profile,\r\n    load_user_posts,\r\n    follow_unfollw,\r\n  })(UserProfile)\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Messages.js",["284","285","286"],"import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Typography,\n  Avatar,\n  makeStyles,\n  Divider,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { load_rooms } from \"../actions/message\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  avatar: {\n    height: 50,\n    width: 50,\n  },\n  loader: {\n    textAlign: \"center\",\n  },\n}));\nconst Messages = ({ load_rooms, rooms, user, isAuthenticated, room_count }) => {\n  const [page, setPage] = useState(2);\n\n  useEffect(() => {\n    load_rooms(1);\n    setPage(2);\n  }, []);\n  const fetchData = async () => {\n    await load_rooms(page);\n    setPage(page + 1);\n  };\n  const classes = useStyles();\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n  return (\n    <>\n      {rooms && (\n        <InfiniteScroll\n          dataLength={rooms.length}\n          next={fetchData}\n          hasMore={room_count > rooms.length}\n          loader={\n            <div className={classes.loader}>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          }\n          endMessage={\n            <div className={classes.loader}>\n              <p>...</p>\n            </div>\n          }\n        >\n          {rooms.map((room) => (\n            <>\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Link exact to={`/chat/${room.id}/`}>\n                  {room.users_list.map(\n                    (chatuser) =>\n                      chatuser.id !== user.id && (\n                        <Avatar\n                          src={chatuser.image}\n                          style={{ width: 50, height: 50, margin: 10 }}\n                        />\n                      )\n                  )}\n                </Link>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Typography variant=\"body1\">\n                    {room.users_list.map(\n                      (u) => u.id !== user.id && `${u.profile_name}@`\n                    )}\n                  </Typography>\n                  {room.users_list.map(\n                    (u) =>\n                      u.id !== user.id &&\n                      u.is_verified && (\n                        <img\n                          src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\n                          style={{ height: 12, marginRight: 5 }}\n                        />\n                      )\n                  )}\n                </div>\n              </div>\n              <Divider />\n            </>\n          ))}\n        </InfiniteScroll>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  rooms: state.message.rooms,\n  room_count: state.message.room_count,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps, { load_rooms })(Messages);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/List.js",["287","288","289"],"import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Typography,\n  Avatar,\n  makeStyles,\n  Divider,\n  CircularProgress,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { load_likes, load_follower, load_following } from \"../actions/blog\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  avatar: {\n    height: 50,\n    width: 50,\n  },\n  loader: {\n    textAlign: \"center\",\n  },\n}));\nconst List = ({\n  match,\n  likes,\n  follower,\n  following,\n  load_likes,\n  like_count,\n  follower_count,\n  following_count,\n  load_follower,\n  load_following,\n}) => {\n  const [page, setPage] = useState(2);\n  const type = match.params.type;\n  const id = match.params.id;\n\n  useEffect(() => {\n    if (type === \"like\") {\n      load_likes(id, 1);\n    }\n    if (type === \"follower\") {\n      load_follower(id, 1);\n    }\n    if (type === \"following\") {\n      load_following(id, 1);\n    }\n    setPage(2);\n  }, []);\n  const fetchData = async () => {\n    if (type === \"like\") {\n      await load_likes(id, page);\n    }\n    if (type === \"follower\") {\n      await load_follower(id, page);\n    }\n    if (type === \"following\") {\n      await load_following(id, page);\n    }\n    setPage(page + 1);\n  };\n  const classes = useStyles();\n  function Component({ list, count }) {\n    return (\n      <InfiniteScroll\n        dataLength={list.length}\n        next={fetchData}\n        hasMore={count > list.length}\n        loader={\n          <div className={classes.loader}>\n            <CircularProgress color=\"secondary\" />\n          </div>\n        }\n        endMessage={\n          <div className={classes.loader}>\n            <p>...</p>\n          </div>\n        }\n      >\n        {list.map((item) => (\n          <>\n            <CardActionArea\n              component={NavLink}\n              to={`/profile/${item.user_name}/`}\n            >\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Avatar\n                  src={item.user_image}\n                  style={{ height: 50, width: 50, margin: 10 }}\n                />\n                <Typography variant=\"body1\">{item.profile__name}</Typography>\n                {item.verified && (\n                  <img\n                    src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\n                    style={{ height: 12, marginRight: 5 }}\n                  />\n                )}\n              </div>\n              <Divider />\n            </CardActionArea>\n          </>\n        ))}\n      </InfiniteScroll>\n    );\n  }\n  switch (type) {\n    case \"like\":\n      return <>{likes && <Component list={likes} count={like_count} />}</>;\n    case \"follower\":\n      return (\n        <>{likes && <Component list={follower} count={follower_count} />}</>\n      );\n    case \"following\":\n      return (\n        <>{likes && <Component list={following} count={following_count} />}</>\n      );\n    default:\n      return <Typography>Not found!</Typography>;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  likes: state.blog.likes,\n  like_count: state.blog.like_count,\n  follower: state.blog.follower,\n  follower_count: state.blog.follower_count,\n  following: state.blog.following,\n  following_count: state.blog.following_count,\n});\nexport default connect(mapStateToProps, {\n  load_likes,\n  load_follower,\n  load_following,\n})(List);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Notification.js",["290","291"],"import React, { useEffect, useState } from \"react\";\nimport { Typography, makeStyles, CircularProgress } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { load_notif } from \"../actions/auth\";\nimport NotifCard from \"../components/NotifCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst useStyles = makeStyles((theme) => ({\n  loader: {\n    textAlign: \"center\",\n  },\n}));\nconst Messages = ({\n  load_notif,\n  isAuthenticated,\n  notification,\n  notif_count,\n}) => {\n  const [page, setPage] = useState(2);\n\n  useEffect(() => {\n    load_notif(1);\n    setPage(2);\n  }, []);\n  const fetchData = async () => {\n    await load_notif(page);\n    setPage(page + 1);\n  };\n  const classes = useStyles();\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n  return (\n    <>\n      {notification && (\n        <InfiniteScroll\n          dataLength={notification.length}\n          next={fetchData}\n          hasMore={notif_count > notification.length}\n          loader={\n            <div className={classes.loader}>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          }\n          endMessage={\n            <div className={classes.loader}>\n              <p>...</p>\n            </div>\n          }\n        >\n          {notification.map((notif) => (\n            <NotifCard notif={notif} />\n          ))}\n        </InfiniteScroll>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  notification: state.auth.notification,\n  notif_count: state.auth.notif_count,\n});\nexport default connect(mapStateToProps, { load_notif })(Messages);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/NewPost.js",["292"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { resetState, new_post } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: { marginTop: 20, minWidth: 240, width: \"80%\" },\n  button: { marginTop: 20, marginBottom: 20 },\n}));\nconst NewPost = ({\n  requestSuccess,\n  requestFail,\n  new_post,\n  isAuthenticated,\n  resetState,\n}) => {\n  const [formData, setFormData] = useState({\n    content: \"\",\n  });\n  const classes = useStyles();\n\n  const { content } = formData;\n  const [requestSent, setRequestSent] = useState(false);\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      setRequestSent(false);\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n  if (requestSuccess === true) return <Redirect to=\"/\" />;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    new_post(content);\n    setRequestSent(true);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            className={classes.textField}\n            type=\"text\"\n            label=\"متن پست\"\n            name=\"content\"\n            value={content}\n            multiline\n            rows={10}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <Button\n          className={classes.button}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ارسال\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { resetState, new_post })(NewPost);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPassword.js",["293"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst ResetPassword = ({\n  requestSuccess,\n  requestFail,\n  resetState,\n  reset_password,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n  });\n  const { email } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    reset_password(email);\n    setRequestSent(true);\n  };\n  if (requestSent === requestSuccess) return <Redirect to='/' />;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant='h5'>درخواست بازنشانی رمز عبور</Typography>\n      <form autoComplete='off' onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete='off'\n            type='email'\n            label='ایمیل'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant='contained'\n          color='secondary'\n          type='submit'\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color='inherit'\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }>\n          ارسال\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, { reset_password, resetState })(\n  ResetPassword\n);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResetPasswordConfirm.js",["294"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm, resetState } from \"../actions/auth\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst ResetPasswordConfirm = ({\n  requestSuccess,\n  reset_password_confirm,\n  match,\n  resetState,\n  requestFail,\n  reset_pass_error,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [rePassHelper, setRePassHelper] = useState(false);\n\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\",\n  });\n\n  const { new_password, re_new_password } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (re_new_password === new_password) {\n      const uid = match.params.uid;\n      const token = match.params.token;\n      setRePassHelper(false);\n      reset_password_confirm(uid, token, new_password, re_new_password);\n      setRequestSent(true);\n    } else {\n      setRePassHelper(true);\n    }\n  };\n  if (requestSent === requestSuccess) return <Redirect to=\"/\" />;\n  const passHelper = (text) => {\n    switch (text) {\n      case \"This password is too short. It must contain at least 8 characters.\":\n        return \"حداقل ۸ کاراکتر شامل حروف و اعداد\";\n      case \"This password is too common.\":\n        return \"یک رمزعبور بهتر انتخاب کنید\";\n      case \"This password is entirely numeric.\":\n        return \"رمزعبور کاملا عددی مجاز نیست\";\n      case \"The password is too similar to the email.\":\n        return \"رمزعبور مشابه ایمیل مجاز نیست\";\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"رمز عبور جدید\"\n            name=\"new_password\"\n            value={new_password}\n            onChange={(e) => onChange(e)}\n            error={reset_pass_error && reset_pass_error.new_password && true}\n            helperText={\n              reset_pass_error &&\n              reset_pass_error.new_password &&\n              passHelper(reset_pass_error.new_password[0])\n            }\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"تکرار رمز عبور\"\n            name=\"re_new_password\"\n            value={re_new_password}\n            error={rePassHelper}\n            helperText={rePassHelper && \"تکرار رمز اشتباه است\"}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n  reset_pass_error: state.auth.reset_pass_error,\n});\nexport default connect(mapStateToProps, { reset_password_confirm, resetState })(\n  ResetPasswordConfirm\n);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Chat.js",["295","296","297","298","299","300"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { w3cwebsocket } from \"websocket\";\nimport {\n  TextField,\n  Typography,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { ArrowBackIos } from \"@material-ui/icons\";\nimport { load_msg } from \"../actions/message\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { withRouter } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Chat = ({ match, load_msg, message, isAuthenticated, count }) => {\n  const room = match.params.room;\n  const userid = localStorage.getItem(\"id\");\n  const client = new w3cwebsocket(\n    `ws://127.0.0.1:8000/ws/some_url/${room}/${userid}/`\n  );\n\n  const [msg, setMsg] = useState(\"\");\n  const [online, setOnline] = useState(0);\n  const [connectionStatus, setConnectionStatus] = useState(\"در حال اتصال...\");\n  const [chat, setChat] = useState([]);\n  const chatContainer = useRef();\n  const [page, setPage] = useState(2);\n\n  useEffect(() => {\n    load_msg(room, 1);\n    setPage(2);\n\n    client.onopen = () => {\n      setConnectionStatus(\"متصل\");\n    };\n    client.onmessage = (message) => {\n      const data = JSON.parse(message.data);\n      data.message && setChat((prev) => [data, ...prev]);\n      data.online && setOnline(data.online);\n    };\n    client.onclose = (e) => {\n      console.log(\"connection closed\");\n      setConnectionStatus(\"قطع شد\");\n    };\n    return () => {\n      client.close();\n    };\n  }, [room]);\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    if (msg !== \"\") {\n      client.send(\n        JSON.stringify({\n          type: \"message\",\n          message: msg,\n          user: userid,\n        })\n      );\n      setMsg(\"\");\n    }\n  };\n  const fetchData = async () => {\n    await load_msg(room, page);\n    setPage(page + 1);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          maxWidth: 500,\n          paddingTop: 20,\n          flex: 1,\n          padding: 10,\n        }}\n      >\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          {connectionStatus}\n        </Typography>\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          {online > 1 && \"آنلاین\"}\n        </Typography>\n        <div\n          ref={chatContainer}\n          id=\"scrollableDiv\"\n          style={{\n            height: 350,\n            width: \"100%\",\n            overflow: \"auto\",\n\n            border: \"silver 1px solid\",\n            borderRadius: 8,\n            overflow: \"auto\",\n            display: \"flex\",\n            flexDirection: \"column-reverse\",\n          }}\n        >\n          {chat &&\n            chat.map((item) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent:\n                    item.user == userid ? \"flex-start\" : \"flex-end\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{\n                    wordWrap: \"break-word\",\n                    backgroundColor:\n                      item.user == userid ? \"#00ced1\" : \"#20b2aa\",\n                    borderRadius: 8,\n                    margin: 10,\n                    padding: 10,\n                    maxWidth: 300,\n                  }}\n                >\n                  {item.message}\n                </Typography>\n              </div>\n            ))}\n          {message && (\n            <InfiniteScroll\n              dataLength={message.length}\n              next={fetchData}\n              style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\n              inverse={true}\n              scrollableTarget=\"scrollableDiv\"\n              hasMore={count > message.length}\n              loader={\n                <div>\n                  <CircularProgress color=\"secondary\" />\n                </div>\n              }\n              endMessage={\n                <div>\n                  <p>...</p>\n                </div>\n              }\n            >\n              {message.map((item) => (\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent:\n                      item.user == userid ? \"flex-start\" : \"flex-end\",\n                  }}\n                >\n                  <Typography\n                    variant=\"body2\"\n                    style={{\n                      wordWrap: \"break-word\",\n                      backgroundColor:\n                        item.user == userid ? \"#00ced1\" : \"#20b2aa\",\n                      borderRadius: 8,\n                      margin: 10,\n                      padding: 10,\n                      maxWidth: 300,\n                    }}\n                  >\n                    {item.content}\n                  </Typography>\n                </div>\n              ))}\n            </InfiniteScroll>\n          )}\n        </div>\n        <form\n          autoComplete=\"off\"\n          onSubmit={(e) => handleClick(e)}\n          style={{ marginTop: 10, flex: 1 }}\n        >\n          <TextField\n            autoComplete=\"off\"\n            id=\"search\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            style={{ width: \"100%\" }}\n            value={msg}\n            onChange={(e) => setMsg(e.target.value)}\n            size=\"small\"\n            InputProps={{\n              endAdornment: (\n                <IconButton color=\"secondary\" size=\"small\" type=\"submit\">\n                  <ArrowBackIos />\n                </IconButton>\n              ),\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  message: state.message.message,\n  isAuthenticated: state.auth.isAuthenticated,\n  count: state.message.msg_count,\n});\nexport default withRouter(connect(mapStateToProps, { load_msg })(Chat));\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PageNotFound.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ScrollToTop.js",["301"],"import { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  return null;\n}\n\nexport default withRouter(ScrollToTop);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/hocs/Layout.js",["302","303"],"import React, { useEffect, useState } from \"react\";\nimport Appbar from \"../components/Appbar\";\nimport BottomBar from \"../components/BottomBar\";\n///import AppBreadCrump from \"../components/AppBreadCrump\";\nimport Footer from \"../components/Footer\";\nimport { connect } from \"react-redux\";\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { create } from \"jss\";\nimport rtl from \"jss-rtl\";\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst Layout = (props) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await props.checkAuthenticated();\n        await props.load_user();\n      } catch (err) {}\n    };\n    if (JSON.parse(localStorage.getItem(\"darkState\"))) {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#464646\");\n    }\n    fetchData();\n  }, []);\n  const [darkState, setDarkState] = useState(\n    JSON.parse(localStorage.getItem(\"darkState\"))\n  );\n  const palletType = darkState ? \"dark\" : \"light\";\n\n  const darkTheme = createMuiTheme({\n    typography: {\n      fontFamily: \"Vazir\",\n    },\n    direction: \"rtl\",\n    palette: {\n      type: palletType,\n      primary: {\n        main: \"#2196f3\",\n        border: darkState ? \"#464646\" : \"#fff\",\n      },\n      secondary: {\n        main: \"#2979ff\",\n      },\n    },\n  });\n  const handleThemeChange = () => {\n    if (!darkState) {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#464646\");\n    } else {\n      document\n        .querySelector('meta[name=\"theme-color\"]')\n        .setAttribute(\"content\", \"#ffffff\");\n    }\n    setDarkState(!darkState);\n    localStorage.setItem(\n      \"darkState\",\n      (!JSON.parse(localStorage.getItem(\"darkState\"))).toString()\n    );\n  };\n\n  return (\n    <StylesProvider jss={jss}>\n      <ThemeProvider theme={darkTheme}>\n        <Appbar checked={darkState} onChange={handleThemeChange} />\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div\n            style={{\n              maxWidth: 900,\n              flex: 1,\n            }}\n          >\n            {props.children}\n          </div>\n        </div>\n        <CssBaseline />\n        <Footer />\n        <BottomBar />\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/Signup.js",["304"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signup, resetState } from \"../actions/auth\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport DialogAlert from \"../components/DialogAlert\";\nimport { Done } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.light,\n    margin: 5,\n  },\n  textfield: {\n    marginTop: 10,\n    minWidth: 250,\n  },\n}));\nconst Signup = ({\n  signup,\n  isAuthenticated,\n  requestSuccess,\n  requestFail,\n  resetState,\n  signup_error,\n}) => {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = useState(false);\n  const [alert, setAlert] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n  });\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n  const { name, email, password, re_password } = formData;\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n      resetState();\n    }\n    if (requestSuccess) {\n      resetState();\n      setRequestSent(false);\n      setAlert({\n        isOpen: true,\n        title: \"ثبت نام انجام شد.\",\n        message: \"برای فعالسازی حساب خود لینک ارسال شده به ایمیل، را باز کنید.\",\n      });\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    signup({ name, email, password, re_password });\n    setRequestSent(true);\n    // if (password === re_password) {\n    //   signup({ name, email, password, re_password });\n    //   setRequestSent(true);\n    // }\n  };\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n\n  const nameHelper = (text) => {\n    switch (text) {\n      case \"Only alphanumeric characters are allowed.\":\n        return \"فقط حروف انگلیسی و اعداد بدون فاصله\";\n      case \"user account with this name already exists.\":\n        return \"این نام کاربری در دسترس نیست\";\n      default:\n        return \"\";\n    }\n  };\n  const passHelper = (text) => {\n    switch (text) {\n      case \"This password is too short. It must contain at least 8 characters.\":\n        return \"حداقل ۸ کاراکتر شامل حروف و اعداد\";\n      case \"This password is too common.\":\n        return \"یک رمزعبور بهتر انتخاب کنید\";\n      case \"This password is entirely numeric.\":\n        return \"رمزعبور کاملا عددی مجاز نیست\";\n      case \"The password is too similar to the email.\":\n        return \"رمزعبور مشابه ایمیل مجاز نیست\";\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 20 }}>\n      <Typography variant=\"h5\">ثبت نام</Typography>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            className={classes.textfield}\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"نام کاربری\"\n            name=\"name\"\n            value={name}\n            error={signup_error && signup_error.name && true}\n            helperText={\n              signup_error &&\n              signup_error.name &&\n              nameHelper(signup_error.name[0])\n            }\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textfield}\n            autoComplete=\"off\"\n            type=\"email\"\n            label=\"ایمیل\"\n            name=\"email\"\n            value={email}\n            error={signup_error && signup_error.email && true}\n            helperText={\n              signup_error &&\n              signup_error.email &&\n              \"ثبت نام با این ایمیل ممکن نیست\"\n            }\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textfield}\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"رمز عبور\"\n            name=\"password\"\n            value={password}\n            error={signup_error && signup_error.password && true}\n            helperText={\n              signup_error &&\n              signup_error.password &&\n              passHelper(signup_error.password[0])\n            }\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textfield}\n            autoComplete=\"off\"\n            type=\"password\"\n            label=\"تایید رمز عبور\"\n            name=\"re_password\"\n            value={re_password}\n            error={signup_error && signup_error.non_field_errors && true}\n            helperText={\n              signup_error &&\n              signup_error.non_field_errors &&\n              \"تکرار رمز اشتباه است\"\n            }\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <Button\n          style={{ margin: 20 }}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          ایجاد حساب\n        </Button>\n      </form>\n      <Typography variant=\"body1\">\n        قبلا ثبت نام کرده اید؟{\" \"}\n        <Link className={classes.navLink} to=\"/login\">\n          ورود{\" \"}\n        </Link>\n      </Typography>\n      <DialogAlert alert={alert} setAlert={setAlert} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n  signup_error: state.auth.signup_error,\n});\n\nexport default connect(mapStateToProps, { signup, resetState })(Signup);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/PostCard.js",["305"],"import React from \"react\";\nimport {\n  Divider,\n  CardContent,\n  makeStyles,\n  Typography,\n  Avatar,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport jMoment from \"moment-jalaali\";\nimport linkify from \"../utils/linkify\";\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  para: {\n    fontSize: 16,\n  },\n  avatar: { height: 50, width: 50, margin: 10 },\n  avatarContainer: { display: \"flex\", alignItems: \"center\" },\n  name: { display: \"flex\", alignItems: \"center\" },\n  content: { minHeight: 70, paddingLeft: 70 },\n}));\n\nexport default function PostCard({ post }) {\n  const classes = useStyles();\n\n  return (\n    <Link className={classes.navLink} to={`/detail/${post.id}/`}>\n      <div className={classes.avatarContainer}>\n        <Link\n          className={classes.navLink}\n          exact\n          to={`/profile/${post.user_name}/`}\n        >\n          <Avatar src={post.user_image} className={classes.avatar} />\n        </Link>\n        <div>\n          <Link\n            className={classes.navLink}\n            exact\n            to={`/profile/${post.user_name}/`}\n          >\n            <div className={classes.name}>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                {post.user_name}@\n              </Typography>\n              <Typography variant=\"body1\" style={{ marginRight: 4 }}>\n                {post.profile_name}\n              </Typography>\n              {post.user_verified && (\n                <img\n                  src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\n                  style={{ height: 12, marginRight: 4 }}\n                />\n              )}\n            </div>\n          </Link>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {jMoment(post.date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\n          </Typography>\n        </div>\n      </div>\n\n      <CardContent className={classes.content}>\n        <p\n          className={classes.para}\n          dangerouslySetInnerHTML={{ __html: linkify(post.text) }}\n        />\n      </CardContent>\n      <Divider />\n    </Link>\n  );\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetEmail.js",["306"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_email, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetEmail = ({\r\n  set_email,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  requestFail,\r\n  resetState,\r\n  set_email_error,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_email: \"\",\r\n    re_new_email: \"\",\r\n    current_password: \"\",\r\n  });\r\n\r\n  const { new_email, re_new_email, current_password } = formData;\r\n  const classes = useStyles();\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_email(new_email, re_new_email, current_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"email\"\r\n            label=\"ایمیل جدید\"\r\n            name=\"new_email\"\r\n            value={new_email}\r\n            error={set_email_error && set_email_error.new_email && true}\r\n            helperText={\r\n              set_email_error &&\r\n              set_email_error.new_email &&\r\n              \"این ایمیل در دسترس نیست\"\r\n            }\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"email\"\r\n            label=\"تکرار ایمیل\"\r\n            name=\"re_new_email\"\r\n            value={re_new_email}\r\n            error={set_email_error && set_email_error.non_field_errors && true}\r\n            helperText={\r\n              set_email_error &&\r\n              set_email_error.non_field_errors &&\r\n              \"تکرار ایمیل اشتباه است\"\r\n            }\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"رمز عبور\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={(e) => onChange(e)}\r\n            error={set_email_error && set_email_error.current_password && true}\r\n            helperText={\r\n              set_email_error &&\r\n              set_email_error.current_password &&\r\n              \"رمزعبور اشتباه است\"\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n  set_email_error: state.auth.set_email_error,\r\n});\r\nexport default connect(mapStateToProps, { set_email, resetState })(SetEmail);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetPassword.js",["307"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_password, resetState } from \"../actions/auth\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetPassword = ({\r\n  set_password,\r\n  setOpenPopup,\r\n  requestSuccess,\r\n  resetState,\r\n  requestFail,\r\n  set_pass_error,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n    current_password: \"\",\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { new_password, re_new_password, current_password } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_password(new_password, re_new_password, current_password);\r\n    setRequestSent(true);\r\n  };\r\n  const passHelper = (text) => {\r\n    switch (text) {\r\n      case \"This password is too short. It must contain at least 8 characters.\":\r\n        return \"حداقل ۸ کاراکتر شامل حروف و اعداد\";\r\n      case \"This password is too common.\":\r\n        return \"یک رمزعبور بهتر انتخاب کنید\";\r\n      case \"This password is entirely numeric.\":\r\n        return \"رمزعبور کاملا عددی مجاز نیست\";\r\n      case \"The password is too similar to the email.\":\r\n        return \"رمزعبور مشابه ایمیل مجاز نیست\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"رمز عبور جدید\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            error={set_pass_error && set_pass_error.new_password && true}\r\n            helperText={\r\n              set_pass_error &&\r\n              set_pass_error.new_password &&\r\n              passHelper(set_pass_error.new_password[0])\r\n            }\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"تکرار رمز جدید\"\r\n            name=\"re_new_password\"\r\n            value={re_new_password}\r\n            error={set_pass_error && set_pass_error.non_field_errors && true}\r\n            helperText={\r\n              set_pass_error &&\r\n              set_pass_error.non_field_errors &&\r\n              \"تکرار رمز اشتباه است\"\r\n            }\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            label=\"رمز عبور فعلی\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            error={set_pass_error && set_pass_error.current_password && true}\r\n            helperText={\r\n              set_pass_error &&\r\n              set_pass_error.current_password &&\r\n              \"رمزعبور اشتباه است\"\r\n            }\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n  set_pass_error: state.auth.set_pass_error,\r\n});\r\nexport default connect(mapStateToProps, { set_password, resetState })(\r\n  SetPassword\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/SetUserDetail.js",["308"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { set_user_detail, resetState } from \"../actions/auth\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetUserDetail = ({\r\n  _id,\r\n  _name,\r\n  _profile_name,\r\n  _bio,\r\n  _phone_no,\r\n  _birth_date,\r\n  setOpenPopup,\r\n  set_user_detail,\r\n  resetState,\r\n  requestSuccess,\r\n  requestFail,\r\n  set_detail_error,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    id: _id,\r\n    name: _name,\r\n    profile_name: _profile_name,\r\n    bio: _bio,\r\n    phone_no: _phone_no,\r\n    birth_date: _birth_date,\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { id, name, profile_name, bio, phone_no, birth_date } = formData;\r\n  useEffect(() => {\r\n    if (requestFail) {\r\n      setRequestSent(false);\r\n      resetState();\r\n    }\r\n    if (requestSuccess) {\r\n      setOpenPopup(false);\r\n      resetState();\r\n    }\r\n  }, [requestFail, requestSuccess]);\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    set_user_detail(id, name, profile_name, bio, phone_no, birth_date);\r\n    setRequestSent(true);\r\n  };\r\n  const nameHelper = (text) => {\r\n    switch (text) {\r\n      case \"Only alphanumeric characters are allowed.\":\r\n        return \"فقط حروف انگلیسی و اعداد بدون فاصله\";\r\n      case \"user account with this name already exists.\":\r\n        return \"این نام کاربری در دسترس نیست\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"نام کاربری\"\r\n            name=\"name\"\r\n            value={name}\r\n            error={set_detail_error && set_detail_error.name && true}\r\n            helperText={\r\n              set_detail_error &&\r\n              set_detail_error.name &&\r\n              nameHelper(set_detail_error.name[0])\r\n            }\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"نام\"\r\n            name=\"profile_name\"\r\n            value={profile_name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"بیو\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"تلفن\"\r\n            name=\"phone_no\"\r\n            value={phone_no}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n            <DatePicker\r\n              className={classes.textField}\r\n              name=\"birth_date\"\r\n              okLabel=\"تأیید\"\r\n              label=\"تاریخ تولد\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={birth_date}\r\n              onChange={(date) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  birth_date: date.toISOString().split(\"T\")[0],\r\n                })\r\n              }\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  requestSuccess: state.auth.requestSuccess,\r\n  requestFail: state.auth.requestFail,\r\n  set_detail_error: state.auth.set_detail_error,\r\n});\r\nexport default connect(mapStateToProps, { set_user_detail, resetState })(\r\n  SetUserDetail\r\n);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Popup.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/DialogAlert.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BookmarkCard.js",["309"],"import React from \"react\";\nimport {\n  Divider,\n  CardContent,\n  makeStyles,\n  Typography,\n  Avatar,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport jMoment from \"moment-jalaali\";\nimport linkify from \"../utils/linkify\";\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  para: {\n    fontSize: 16,\n  },\n}));\n\nexport default function BookmarkCard({ post }) {\n  const classes = useStyles();\n\n  return (\n    <Link className={classes.navLink} to={`/detail/${post.post_id}/`}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link\n          className={classes.navLink}\n          exact\n          to={`/profile/${post.user_name}/`}\n        >\n          <Avatar\n            src={post.user_image}\n            style={{ height: 50, width: 50, margin: 10 }}\n          />\n        </Link>\n        <div>\n          <Link\n            className={classes.navLink}\n            exact\n            to={`/profile/${post.user_name}/`}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                {post.user_name}@\n              </Typography>\n              <Typography variant=\"body1\" style={{ marginRight: 4 }}>\n                {post.profile_name}\n              </Typography>\n              {post.user_verified && (\n                <img\n                  src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\n                  style={{ height: 12, marginRight: 5 }}\n                />\n              )}\n            </div>\n          </Link>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {jMoment(post.post_date, \"YYYY/M/D\").format(\"jYYYY/jM/jD\")}\n          </Typography>\n        </div>\n      </div>\n\n      <CardContent style={{ minHeight: 70, paddingRight: 70 }}>\n        <p\n          className={classes.para}\n          dangerouslySetInnerHTML={{ __html: linkify(post.post_content) }}\n        />\n      </CardContent>\n      <Divider />\n    </Link>\n  );\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/auth.js",["310","311","312","313","314","315"],"import axios from \"axios\";\nimport { load_replies } from \"./blog\";\nimport { logout3 } from \"./message\";\nimport {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n  BOOKMARK_SUCCESS,\n  BOOKMARK_FAIL,\n  NEW_POST_SUCCESS,\n  NEW_POST_FAIL,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAIL,\n  UPDATE_AVATAR_SUCCESS,\n  UPDATE_AVATAR_FAIL,\n  LOAD_NOTIF_SUCCESS,\n  LOAD_NOTIF_FAIL,\n} from \"./types\";\nimport { load_post, load_profile } from \"./blog\";\n\nexport const load_notif =\n  (page = 1) =>\n  async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const userId = localStorage.getItem(\"id\");\n      try {\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/notification/${userId}/${page}/`,\n          config\n        );\n\n        dispatch({\n          type: LOAD_NOTIF_SUCCESS,\n          payload: res.data,\n          page: page,\n        });\n      } catch (err) {\n        dispatch({\n          type: LOAD_NOTIF_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: LOAD_NOTIF_FAIL,\n      });\n    }\n  };\nexport const update_avatar = (image, path) => async (dispatch) => {\n  let formData = new FormData();\n  const user = localStorage.getItem(\"id\");\n  if (path === \"avatar\") {\n    formData.append(\"image\", image);\n  } else {\n    formData.append(\"header\", image);\n  }\n\n  formData.append(\"id\", user);\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n      Accept: \"application/json\",\n    },\n  };\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/accounts/${path}/`,\n      formData,\n      config\n    );\n    dispatch({\n      type: UPDATE_AVATAR_SUCCESS,\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: UPDATE_AVATAR_FAIL,\n    });\n  }\n};\nexport const follow_unfollw = (target_name) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, target_name });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/accounts/follow/`,\n        body,\n        config\n      );\n      dispatch({\n        type: FOLLOW_SUCCESS,\n      });\n      dispatch(load_profile(target_name));\n    } catch (err) {\n      dispatch({\n        type: FOLLOW_FAIL,\n      });\n    }\n  }\n};\nexport const new_post = (content) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, content });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/blog/post-create/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: NEW_POST_SUCCESS,\n      });\n    } catch (err) {\n      dispatch({\n        type: NEW_POST_FAIL,\n      });\n    }\n  }\n};\nexport const comment = (item, star, title, description) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, item, star, title, description });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/comment/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SET_COMMENTS_SUCCESS,\n      });\n      dispatch(load_replies(item, 1));\n    } catch (err) {\n      dispatch({\n        type: SET_COMMENTS_FAIL,\n      });\n    }\n  }\n};\n\nexport const set_user_detail =\n  (id, name, profile_name, bio, phone_no, birth_date) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const body = JSON.stringify({\n        id,\n        name,\n        profile_name,\n        bio,\n        phone_no,\n        birth_date,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/accounts/user-set/`,\n          body,\n          config\n        );\n\n        dispatch({\n          type: SET_USER_DETAIL_SUCCESS,\n          payload: res.data,\n        });\n        dispatch(load_user());\n      } catch (error) {\n        if (error.request.status === 400) {\n          dispatch({\n            type: SET_USER_DETAIL_FAIL,\n            payload: JSON.parse(error.request.response),\n          });\n        } else {\n          dispatch({\n            type: SET_USER_DETAIL_FAIL,\n            payload: { error: \"unknown error\" },\n          });\n        }\n      }\n    } else {\n      dispatch({\n        type: SET_USER_DETAIL_FAIL,\n      });\n    }\n  };\nexport const bookmark = (id, page) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n    const user = localStorage.getItem(\"id\");\n    const body = JSON.stringify({ user, id });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/blog/bookmark/`,\n        body,\n        config\n      );\n      dispatch({\n        type: BOOKMARK_SUCCESS,\n        payload: res.data,\n      });\n      if (page) {\n        dispatch(load_bookmark(page));\n      } else {\n        dispatch(load_post(id));\n      }\n    } catch (err) {\n      dispatch({\n        type: BOOKMARK_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: BOOKMARK_FAIL,\n    });\n  }\n};\nexport const load_bookmark =\n  (page = 1) =>\n  async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n      const userId = localStorage.getItem(\"id\");\n      try {\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/blog/bookmark-list/${userId}/${page}/`,\n          config\n        );\n\n        dispatch({\n          type: LOAD_BOOKMARK_SUCCESS,\n          payload: res.data,\n          page: page,\n        });\n      } catch (err) {\n        dispatch({\n          type: LOAD_BOOKMARK_FAIL,\n        });\n      }\n    } else {\n      dispatch({\n        type: LOAD_BOOKMARK_FAIL,\n      });\n    }\n  };\nexport const checkAuthenticated = () => async (dispatch) => {\n  if (typeof window == \"undefined\") {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const load_user = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      );\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(load_user());\n  } catch (error) {\n    console.log(error.request.response);\n    if (error.request.status === 401) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: JSON.parse(error.request.response),\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: { error: \"unknown error\" },\n      });\n    }\n  }\n};\n\nexport const signup =\n  ({ name, email, password, re_password }) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ name, email, password, re_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      // console.log(\"request.status\", error.request.status);\n      // console.log(\"request.response\", error.request.response);\n      // console.log(\"message\", error.message);\n      if (error.request.status === 400) {\n        dispatch({\n          type: SIGNUP_FAIL,\n          payload: JSON.parse(error.request.response),\n        });\n      } else {\n        dispatch({\n          type: SIGNUP_FAIL,\n          payload: { error: \"unknown error\" },\n        });\n      }\n    }\n  };\n\nexport const verify = (uid, token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: RESET_PASSWORD_CONFIRM_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      if (error.request.status === 400) {\n        dispatch({\n          type: RESET_PASSWORD_CONFIRM_FAIL,\n          payload: JSON.parse(error.request.response),\n        });\n      } else {\n        dispatch({\n          type: RESET_PASSWORD_CONFIRM_FAIL,\n          payload: { error: \"unknown error\" },\n        });\n      }\n    }\n  };\nexport const set_email =\n  (new_email, re_new_email, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_email,\n        re_new_email,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_email/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_EMAIL_SUCCESS,\n        });\n        dispatch(load_user());\n      } catch (error) {\n        if (error.request.status === 400) {\n          dispatch({\n            type: SET_EMAIL_FAIL,\n            payload: JSON.parse(error.request.response),\n          });\n        } else {\n          dispatch({\n            type: SET_EMAIL_FAIL,\n            payload: { error: \"unknown error\" },\n          });\n        }\n      }\n    }\n  };\nexport const set_password =\n  (new_password, re_new_password, current_password) => async (dispatch) => {\n    if (localStorage.getItem(\"access\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        new_password,\n        re_new_password,\n        current_password,\n      });\n\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/auth/users/set_password/`,\n          body,\n          config\n        );\n        dispatch({\n          type: SET_PASSWORD_SUCCESS,\n        });\n      } catch (error) {\n        if (error.request.status === 400) {\n          dispatch({\n            type: SET_PASSWORD_FAIL,\n            payload: JSON.parse(error.request.response),\n          });\n        } else {\n          dispatch({\n            type: SET_PASSWORD_FAIL,\n            payload: { error: \"unknown error\" },\n          });\n        }\n      }\n    }\n  };\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n  dispatch(logout3({ type: LOGOUT }));\n};\nexport const resetState = () => (dispatch) => {\n  dispatch({ type: RESET_STATE });\n};\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/blog.js",["316","317"],"import axios from \"axios\";\r\nimport {\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POSTS_FAIL,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_POST_FAIL,\r\n  LOGOUT,\r\n  LIKE_SUCCESS,\r\n  LIKE_FAIL,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_COMMENTS_FAIL,\r\n  LOAD_LIKE_SUCCESS,\r\n  LOAD_LIKE_FAIL,\r\n  LOAD_PROFILE_SUCCESS,\r\n  LOAD_PROFILE_FAIL,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  LOAD_USER_POSTS_FAIL,\r\n  LOAD_FOLLOWER_SUCCESS,\r\n  LOAD_FOLLOWER_FAIL,\r\n  LOAD_FOLLOWING_SUCCESS,\r\n  LOAD_FOLLOWING_FAIL,\r\n} from \"./types\";\r\nimport { load_bookmark } from \"./auth\";\r\nexport const load_posts = (page, keyword) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const user = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : false;\r\n  const body = JSON.stringify({\r\n    keyword,\r\n    page,\r\n    user,\r\n  });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/post-list/${page}/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      payload: res.data,\r\n      page: page,\r\n      keyword: keyword,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_POSTS_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const load_user_posts = (name, page) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/user-post-list/${name}/${page}/`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      payload: res.data,\r\n      page: page,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_USER_POSTS_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_post = (postId) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const user = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : false;\r\n  const body = JSON.stringify({ user });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/post-detail/${postId}/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOAD_POST_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_POST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_profile = (name) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const user = localStorage.getItem(\"id\");\r\n  const body = JSON.stringify({ user, name });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/blog/profile-detail/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOAD_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOAD_PROFILE_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const load_replies =\r\n  (item, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/comment-list/${item}/${page}/`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: LOAD_COMMENTS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_COMMENTS_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const load_likes =\r\n  (postId, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/blog/like-list/${postId}/${page}/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: LOAD_LIKE_SUCCESS,\r\n        payload: res.data,\r\n        page: page,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_LIKE_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const load_follower =\r\n  (postId, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/blog/follower-list/${postId}/${page}/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: LOAD_FOLLOWER_SUCCESS,\r\n        payload: res.data,\r\n        page: page,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_FOLLOWER_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const load_following =\r\n  (postId, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/blog/following-list/${postId}/${page}/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: LOAD_FOLLOWING_SUCCESS,\r\n        payload: res.data,\r\n        page: page,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_FOLLOWING_FAIL,\r\n      });\r\n    }\r\n  };\r\nexport const like = (id) => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const user = localStorage.getItem(\"id\");\r\n    const body = JSON.stringify({ user, id });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/blog/like/`,\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: LIKE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(load_post(id));\r\n      dispatch(load_likes(id));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LIKE_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: LIKE_FAIL,\r\n    });\r\n  }\r\n};\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/message.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/utils/linkify.js",["318","319","320"],"const reUrl = /(?:(?:https?|ftp):\\/\\/)?[\\w/\\-?=%.]+\\.[\\w/\\-&?=%.]+/gi;\nconst reHash = /(?:^|\\s)(#[^\\s#]+|[^\\s#]+#)(?=$|\\s)/g;\nconst reAt = /(?:\\s|^)?@[A-Za-z0-9\\-\\.\\_]+(?:\\s|$)/g;\nconst hash_url = `${process.env.REACT_APP_API_URL}/search`;\nconst at_url = `${process.env.REACT_APP_API_URL}/profile`;\n\nexport default function (text) {\n  return text\n    .replace(reUrl, (url) => {\n      let newUrl = url\n        .replace(\"https://\", \"\")\n        .replace(\"http://\", \"\")\n        .replace(\"www.\", \"\")\n        .trim();\n      return `<a target=\"_blank\" class=\"tag\" href=\"//${newUrl}\">${newUrl}</a>`;\n    })\n    .replace(\n      reAt,\n      (at) =>\n        `<a class=\"tag\" href=\"${at_url}/${at\n          .replace(\"@\", \"\")\n          .trim()}\">${at}</a>`\n    )\n    .replace(\n      reHash,\n      (hash) =>\n        `<a class=\"tag\" href=\"${hash_url}?keyword=${hash\n          .replace(\"#\", \"\")\n          .trim()}\">${hash}</a>`\n    );\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Appbar.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/Footer.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/BottomBar.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/NotifCard.js",["321"],"import React from \"react\";\nimport {\n  CardContent,\n  makeStyles,\n  Typography,\n  Avatar,\n  Divider,\n} from \"@material-ui/core\";\nimport { Favorite, PersonAddRounded, ChatRounded } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport jMoment from \"moment-jalaali\";\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n}));\n\nexport default function NotifCard({ notif }) {\n  const classes = useStyles();\n  let msg = \"\";\n  if (notif.kind === \"F\") {\n    msg = \" شما را فالو کرد \";\n  } else if (notif.kind === \"L\") {\n    msg = \" پست شما را پسندید \";\n  } else {\n    msg = \" روی پست شما نوشت \";\n  }\n  return (\n    <Link\n      className={classes.navLink}\n      to={\n        notif.kind === \"F\"\n          ? `/profile/${notif.sender_name}/`\n          : `/detail/${notif.post}/`\n      }\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        {notif.kind === \"L\" && (\n          <Favorite color=\"error\" style={{ marginRight: 10 }} />\n        )}\n        {notif.kind === \"F\" && (\n          <PersonAddRounded color=\"secondary\" style={{ marginRight: 10 }} />\n        )}\n        {notif.kind === \"C\" && <ChatRounded style={{ marginRight: 10 }} />}\n        <Link\n          className={classes.navLink}\n          exact\n          to={`/profile/${notif.sender_name}/`}\n        >\n          <Avatar\n            src={notif.sender_image}\n            style={{ height: 50, width: 50, margin: 10 }}\n          />\n        </Link>\n        <div>\n          <Link\n            className={classes.navLink}\n            exact\n            to={`/profile/${notif.sender_name}/`}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Typography variant=\"body1\">{notif.sender_name}@</Typography>\n              {notif.user_verified && (\n                <img\n                  src={`${process.env.REACT_APP_API_URL}/media/verified.png`}\n                  style={{ height: 12, marginRight: 5, marginLeft: 5 }}\n                />\n              )}\n              <Typography>{msg}</Typography>\n            </div>\n          </Link>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {jMoment(notif.date, \"YYYY/M/D HH:mm\").format(\"jYYYY/jM/jD HH:mm\")}\n          </Typography>\n        </div>\n      </div>\n\n      <CardContent></CardContent>\n      <Divider />\n    </Link>\n  );\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/index.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/types.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/message.js",["322"],"import {\n  LOAD_MSG_SUCCESS,\n  LOAD_MSG_FAIL,\n  LOAD_ROOMS_SUCCESS,\n  LOAD_ROOMS_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\nconst initialState = { message: [], rooms: [] };\n\nexport default function (state = initialState, action) {\n  const { type, payload, page } = action;\n\n  switch (type) {\n    case LOAD_MSG_SUCCESS:\n      return {\n        ...state,\n        message: state.message.concat(payload.msg),\n        msg_count: payload.count,\n      };\n    case LOAD_ROOMS_SUCCESS:\n      if (page === 1) {\n        return {\n          ...state,\n          rooms: payload.rooms,\n          room_count: payload.count,\n          message: [],\n          msg_count: 0,\n        };\n      } else {\n        return {\n          ...state,\n          rooms: state.rooms.concat(payload.rooms),\n          room_count: payload.count,\n          message: [],\n          msg_count: 0,\n        };\n      }\n\n    case LOGOUT:\n      localStorage.removeItem(\"id\");\n      return {\n        ...state,\n        message: [],\n        rooms: [],\n      };\n\n    case LOAD_MSG_FAIL:\n    case LOAD_ROOMS_FAIL:\n    default:\n      return state;\n  }\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/blog.js",["323","324"],"import {\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POSTS_FAIL,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_POST_FAIL,\r\n  LOGOUT,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_LIKE_SUCCESS,\r\n  LOAD_LIKE_FAIL,\r\n  LOAD_PROFILE_SUCCESS,\r\n  LOAD_PROFILE_FAIL,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  LOAD_USER_POSTS_FAIL,\r\n  LOAD_FOLLOWER_SUCCESS,\r\n  LOAD_FOLLOWER_FAIL,\r\n  LOAD_FOLLOWING_SUCCESS,\r\n  LOAD_FOLLOWING_FAIL,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  posts: [],\r\n  search_posts: [],\r\n  userposts: [],\r\n  likes: [],\r\n  follower: [],\r\n  following: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload, page, keyword } = action;\r\n\r\n  switch (type) {\r\n    case LOAD_POSTS_SUCCESS:\r\n      if (keyword) {\r\n        if (page === 1) {\r\n          return {\r\n            ...state,\r\n            search_posts: payload.posts,\r\n            search_count: payload.count,\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            search_posts: state.search_posts.concat(payload.posts),\r\n            search_count: payload.count,\r\n          };\r\n        }\r\n      } else {\r\n        if (page === 1) {\r\n          return {\r\n            ...state,\r\n            posts: payload.posts,\r\n            count: payload.count,\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            posts: state.posts.concat(payload.posts),\r\n            count: payload.count,\r\n          };\r\n        }\r\n      }\r\n\r\n    case LOAD_USER_POSTS_SUCCESS:\r\n      if (page === 1) {\r\n        return {\r\n          ...state,\r\n          userposts: payload.posts,\r\n          profile_count: payload.count,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          userposts: state.userposts.concat(payload.posts),\r\n          profile_count: payload.count,\r\n        };\r\n      }\r\n    case LOAD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n      };\r\n    case LOAD_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n      };\r\n    case LOAD_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: payload,\r\n      };\r\n    case LOAD_LIKE_SUCCESS:\r\n      if (page === 1) {\r\n        return {\r\n          ...state,\r\n          likes: payload.likes,\r\n          like_count: payload.count,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          likes: state.likes.concat(payload.likes),\r\n          like_count: payload.count,\r\n        };\r\n      }\r\n    case LOAD_FOLLOWER_SUCCESS:\r\n      if (page === 1) {\r\n        return {\r\n          ...state,\r\n          follower: payload.follower,\r\n          follower_count: payload.count,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          follower: state.follower.concat(payload.follower),\r\n          follower_count: payload.count,\r\n        };\r\n      }\r\n    case LOAD_FOLLOWING_SUCCESS:\r\n      if (page === 1) {\r\n        return {\r\n          ...state,\r\n          following: payload.following,\r\n          following_count: payload.count,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          following: state.following.concat(payload.following),\r\n          following_count: payload.count,\r\n        };\r\n      }\r\n    case LOAD_POSTS_FAIL:\r\n    case LOAD_POST_FAIL:\r\n    case LOAD_LIKE_FAIL:\r\n    case LOAD_FOLLOWER_FAIL:\r\n    case LOAD_FOLLOWING_FAIL:\r\n    case LOAD_PROFILE_FAIL:\r\n    case LOAD_USER_POSTS_FAIL:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/auth.js",["325"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  SET_EMAIL_SUCCESS,\n  SET_EMAIL_FAIL,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAIL,\n  LOGOUT,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  RESET_STATE,\n  SET_USER_DETAIL_FAIL,\n  SET_USER_DETAIL_SUCCESS,\n  LOAD_BOOKMARK_FAIL,\n  LOAD_BOOKMARK_SUCCESS,\n  SET_COMMENTS_FAIL,\n  SET_COMMENTS_SUCCESS,\n  BOOKMARK_SUCCESS,\n  BOOKMARK_FAIL,\n  NEW_POST_SUCCESS,\n  NEW_POST_FAIL,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAIL,\n  UPDATE_AVATAR_SUCCESS,\n  UPDATE_AVATAR_FAIL,\n  LOAD_NOTIF_SUCCESS,\n  LOAD_NOTIF_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: null,\n  user: {\n    id: null,\n  },\n  notification: [],\n  bookmarks: [],\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload, page } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n        login_error: null,\n      };\n    case USER_LOADED_SUCCESS:\n      localStorage.setItem(\"id\", payload.id);\n      return {\n        ...state,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n        requestSuccess: true,\n        signup_error: null,\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n        set_pass_error: null,\n      };\n    case RESET_PASSWORD_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n        reset_pass_error: null,\n      };\n    case ACTIVATION_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case SET_EMAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n        set_email_error: null,\n      };\n    case SET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    //new\n    case SET_USER_DETAIL_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n        set_detail_error: null,\n      };\n    case SET_USER_DETAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n        set_detail_error: payload,\n      };\n    case LOAD_BOOKMARK_SUCCESS:\n      if (page === 1) {\n        return {\n          ...state,\n          bookmarks: payload.bookmarks,\n          bookmark_count: payload.count,\n        };\n      } else {\n        return {\n          ...state,\n          bookmarks: state.bookmarks.concat(payload.bookmarks),\n          bookmark_count: payload.count,\n        };\n      }\n    case NEW_POST_SUCCESS:\n    case SET_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        requestSuccess: true,\n      };\n    case LOAD_NOTIF_SUCCESS:\n      if (page === 1) {\n        return {\n          ...state,\n          notification: payload.notification,\n          notif_count: payload.count,\n        };\n      } else {\n        return {\n          ...state,\n          notification: state.notification.concat(payload.notification),\n          notif_count: payload.count,\n        };\n      }\n\n    case NEW_POST_FAIL:\n    case SET_COMMENTS_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    //\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case RESET_PASSWORD_CONFIRM_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n        reset_pass_error: payload,\n      };\n    case ACTIVATION_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n      };\n    case SET_EMAIL_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n        set_email_error: payload,\n      };\n    case SET_PASSWORD_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n        set_pass_error: payload,\n      };\n    //\n    case AUTHENTICATED_FAIL:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n        notification: [],\n        bookmarks: [],\n      };\n    case USER_LOADED_FAIL:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n        notification: [],\n        bookmarks: [],\n      };\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n        signup_error: payload,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        requestFail: true,\n        login_error: payload,\n      };\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n        notification: [],\n        bookmarks: [],\n      };\n    case RESET_STATE:\n      return {\n        ...state,\n        requestSuccess: null,\n        requestFail: null,\n      };\n    case LOAD_NOTIF_FAIL:\n    case UPDATE_AVATAR_SUCCESS:\n    case UPDATE_AVATAR_FAIL:\n    case FOLLOW_SUCCESS:\n    case FOLLOW_FAIL:\n    case BOOKMARK_SUCCESS:\n    case BOOKMARK_FAIL:\n    case LOAD_BOOKMARK_FAIL:\n    default:\n      return state;\n  }\n}\n",["326","327"],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/containers/ResumeCreator.js",["328"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { load_resume } from \"../actions/resume\";\nimport Education from \"../components/ResumeViews/Education\";\nimport Language from \"../components/ResumeViews/Language\";\nimport Skills from \"../components/ResumeViews/Skills\";\nimport JobHistory from \"../components/ResumeViews/JobHistory\";\nimport InfoPage from \"../components/ResumeViews/InfoPage\";\nconst ResumeCreator = ({ isAuthenticated, load_resume, resume }) => {\n  useEffect(() => {\n    load_resume();\n  }, []);\n  if (isAuthenticated === false) return <Redirect to=\"/login\" />;\n\n  return (\n    <div style={{ minHeight: 400, margin: 10 }}>\n      {resume && (\n        <>\n          <InfoPage />\n          <Education />\n          <JobHistory />\n          <Language />\n          <Skills />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  resume: state.resume.resume,\n});\nexport default connect(mapStateToProps, { load_resume })(ResumeCreator);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/actions/resume.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/reducers/resume.js",["329"],"import {\n  LOAD_RESUME_SUCCESS,\n  LOAD_RESUME_FAIL,\n  ADD_EDUCATION_SUCCESS,\n  ADD_EDUCATION_FAIL,\n  ADD_LANGUAGE_SUCCESS,\n  ADD_LANGUAGE_FAIL,\n  ADD_SKILL_SUCCESS,\n  ADD_SKILL_FAIL,\n  ADD_JOB_SUCCESS,\n  ADD_JOB_FAIL,\n} from \"../actions/types\";\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOAD_RESUME_SUCCESS:\n      return {\n        ...state,\n        resume: payload,\n      };\n    case ADD_EDUCATION_SUCCESS:\n      return {\n        ...state,\n        new_edu: payload,\n      };\n    case ADD_LANGUAGE_SUCCESS:\n      return {\n        ...state,\n        new_lang: payload,\n      };\n    case ADD_JOB_SUCCESS:\n      return {\n        ...state,\n        new_job: payload,\n      };\n    case ADD_SKILL_SUCCESS:\n      return {\n        ...state,\n        new_skill: payload,\n      };\n    case ADD_EDUCATION_FAIL:\n      return {\n        ...state,\n        new_edu: \"error\",\n      };\n    case ADD_JOB_FAIL:\n      return {\n        ...state,\n        new_job: \"error\",\n      };\n    case ADD_LANGUAGE_FAIL:\n      return {\n        ...state,\n        new_lang: \"error\",\n      };\n    case ADD_SKILL_FAIL:\n      return {\n        ...state,\n        new_skill: \"error\",\n      };\n    case LOAD_RESUME_FAIL:\n    default:\n      return state;\n  }\n}\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetEducation.js",["330"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { add_education } from \"../../actions/resume\";\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: { marginTop: 5, minWidth: 240 },\r\n  button: { marginTop: 20, marginBottom: 20 },\r\n}));\r\nconst SetEducation = ({ setOpenPopup, add_education, new_edu }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState({\r\n    title: null,\r\n    end_date: null,\r\n    campus: null,\r\n    score: null,\r\n  });\r\n  const { title, end_date, campus, score } = formData;\r\n  useEffect(() => {\r\n    if (new_edu && new_edu.end_date === end_date) {\r\n      setOpenPopup(false);\r\n    } else if (new_edu && new_edu === \"error\") {\r\n      setRequestSent(false);\r\n    }\r\n  }, [new_edu]);\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setRequestSent(true);\r\n    add_education(false, title, campus, end_date, score);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"مقطع\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n            <DatePicker\r\n              required\r\n              className={classes.textField}\r\n              name=\"end_date\"\r\n              okLabel=\"تأیید\"\r\n              label=\"تاریخ اخذ مدرک\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={end_date}\r\n              onChange={(date) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  end_date: date.toISOString().split(\"T\")[0],\r\n                })\r\n              }\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.textField}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            label=\"محل تحصیل\"\r\n            name=\"campus\"\r\n            value={campus}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            label=\"معدل\"\r\n            name=\"score\"\r\n            value={score}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={\r\n            requestSent ? (\r\n              <CircularProgress\r\n                size={20}\r\n                style={{ marginLeft: \"10px\" }}\r\n                color=\"inherit\"\r\n              />\r\n            ) : (\r\n              <Done style={{ marginLeft: \"10px\" }} />\r\n            )\r\n          }\r\n        >\r\n          تایید\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  new_edu: state.resume.new_edu,\r\n});\r\nexport default connect(mapStateToProps, { add_education })(SetEducation);\r\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetLanguage.js",["331"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nimport { add_language } from \"../../actions/resume\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: { marginTop: 5, minWidth: 240 },\n  button: { marginTop: 20, marginBottom: 20 },\n}));\nconst SetLanguage = ({ setOpenPopup, add_language, new_lang }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    title: null,\n    level: null,\n  });\n  const { title, level } = formData;\n  const [openLevel, setOpenLevel] = useState(false);\n\n  const levelList = [\n    { title: \"خواندن و نوشتن\", value: \"R\" },\n    { title: \"درک مطلب\", value: \"C\" },\n    { title: \"مکالمه\", value: \"S\" },\n  ];\n  useEffect(() => {\n    if (new_lang && new_lang.title === title) {\n      setOpenPopup(false);\n    } else if (new_lang && new_lang === \"error\") {\n      setRequestSent(false);\n    }\n  }, [new_lang]);\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    add_language(false, title, level);\n  };\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            className={classes.textField}\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"زبان\"\n            name=\"title\"\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <FormControl style={{ width: \"100%\" }}>\n            <InputLabel>سطح</InputLabel>\n            <Select\n              open={openLevel}\n              onClose={() => setOpenLevel(false)}\n              onOpen={() => setOpenLevel(true)}\n              value={level}\n              name=\"level\"\n              onChange={(e) => onChange(e)}\n            >\n              <MenuItem value=\"\">هیچ کدام</MenuItem>\n              {levelList.map((l) => (\n                <MenuItem value={l.value}>{l.title}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <Button\n          type=\"submit\"\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  new_lang: state.resume.new_lang,\n});\nexport default connect(mapStateToProps, { add_language })(SetLanguage);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetJobHistory.js",["332"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nimport jMoment from \"moment-jalaali\";\nimport JalaliUtils from \"@date-io/jalaali\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { add_job } from \"../../actions/resume\";\n\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\n\nconst useStyles = makeStyles((theme) => ({\n  textField: { marginTop: 5, minWidth: 240 },\n  button: { marginTop: 20, marginBottom: 20 },\n}));\nconst SetJobHistory = ({ setOpenPopup, add_job, new_job }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    title: null,\n    end_date: null,\n    start_date: null,\n    company: null,\n  });\n  const { title, end_date, start_date, company } = formData;\n  useEffect(() => {\n    if (new_job && new_job.end_date === end_date) {\n      setOpenPopup(false);\n    } else if (new_job && new_job === \"error\") {\n      setRequestSent(false);\n    }\n  }, [new_job]);\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    add_job(false, title, start_date, end_date, company);\n  };\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            className={classes.textField}\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"عنوان\"\n            name=\"title\"\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\n            <DatePicker\n              required\n              className={classes.textField}\n              name=\"end_date\"\n              okLabel=\"تأیید\"\n              label=\"تاریخ شروع\"\n              cancelLabel=\"لغو\"\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\n              value={start_date}\n              onChange={(date) =>\n                setFormData({\n                  ...formData,\n                  start_date: date.toISOString().split(\"T\")[0],\n                })\n              }\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\n            <DatePicker\n              required\n              className={classes.textField}\n              name=\"end_date\"\n              okLabel=\"تأیید\"\n              label=\"تاریخ خاتمه\"\n              cancelLabel=\"لغو\"\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\n              value={end_date}\n              onChange={(date) =>\n                setFormData({\n                  ...formData,\n                  end_date: date.toISOString().split(\"T\")[0],\n                })\n              }\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n        <div>\n          <TextField\n            className={classes.textField}\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"محل کار\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <Button\n          type=\"submit\"\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  new_job: state.resume.new_job,\n});\nexport default connect(mapStateToProps, { add_job })(SetJobHistory);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetSkill.js",["333"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\nimport { add_skill } from \"../../actions/resume\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: { marginTop: 5, minWidth: 240 },\n  button: { marginTop: 20, marginBottom: 20 },\n}));\nconst SetSkill = ({ setOpenPopup, add_skill, new_skill }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    title: null,\n    level: null,\n  });\n  const { title, level } = formData;\n  const [openLevel, setOpenLevel] = useState(false);\n  const levelList = [\n    { title: \"مبتدی\", value: \"J\" },\n    { title: \"متوسط\", value: \"M\" },\n    { title: \"پیشرفته\", value: \"S\" },\n  ];\n  useEffect(() => {\n    if (new_skill && new_skill.title === title) {\n      setOpenPopup(false);\n    } else if (new_skill && new_skill === \"error\") {\n      setRequestSent(false);\n    }\n  }, [new_skill]);\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    add_skill(false, title, level);\n  };\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            className={classes.textField}\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"عنوان\"\n            name=\"title\"\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <FormControl style={{ width: \"100%\" }}>\n            <InputLabel>سطح</InputLabel>\n            <Select\n              open={openLevel}\n              onClose={() => setOpenLevel(false)}\n              onOpen={() => setOpenLevel(true)}\n              value={level}\n              name=\"level\"\n              onChange={(e) => onChange(e)}\n            >\n              <MenuItem value=\"\">هیچ کدام</MenuItem>\n              {levelList.map((l) => (\n                <MenuItem value={l.value}>{l.title}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <Button\n          type=\"submit\"\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  new_skill: state.resume.new_skill,\n});\nexport default connect(mapStateToProps, { add_skill })(SetSkill);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/forms/SetInfo.js",["334","335"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Done } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: { marginTop: 5, minWidth: 240 },\n  button: { marginTop: 20, marginBottom: 20 },\n}));\nconst SetInfo = ({\n  _id,\n  _address,\n  _militry_service,\n  setOpenPopup,\n  requestSuccess,\n  requestFail,\n}) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    id: _id,\n    address: _address,\n    militry_service: _militry_service,\n  });\n  const { id, address, militry_service } = formData;\n  const [openLevel, setOpenLevel] = useState(false);\n  const serviceList = [\n    { title: \"مشمول\", value: \"N\" },\n    { title: \"پایان خدمت\", value: \"C\" },\n    { title: \"در حال انجام\", value: \"D\" },\n    { title: \"معاف\", value: \"E\" },\n  ];\n  useEffect(() => {\n    if (requestFail) {\n      setRequestSent(false);\n    }\n    if (requestSuccess) {\n      setOpenPopup(false);\n    }\n  }, [requestFail, requestSuccess]);\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setRequestSent(true);\n    console.log(formData);\n  };\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\n        <div>\n          <TextField\n            className={classes.textField}\n            autoComplete=\"off\"\n            type=\"text\"\n            label=\"محل سکونت\"\n            name=\"address\"\n            value={address}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div>\n          <FormControl style={{ width: \"100%\" }}>\n            <InputLabel>وضعیت نظام وظیفه</InputLabel>\n            <Select\n              open={openLevel}\n              onClose={() => setOpenLevel(false)}\n              onOpen={() => setOpenLevel(true)}\n              value={militry_service}\n              name=\"militry_service\"\n              onChange={(e) => onChange(e)}\n            >\n              <MenuItem value=\"\">هیچ کدام</MenuItem>\n              {serviceList.map((l) => (\n                <MenuItem value={l.value}>{l.title}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <Button\n          type=\"submit\"\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={\n            requestSent ? (\n              <CircularProgress\n                size={20}\n                style={{ marginLeft: \"10px\" }}\n                color=\"inherit\"\n              />\n            ) : (\n              <Done style={{ marginLeft: \"10px\" }} />\n            )\n          }\n        >\n          تایید\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  requestSuccess: state.auth.requestSuccess,\n  requestFail: state.auth.requestFail,\n});\nexport default connect(mapStateToProps, {})(SetInfo);\n","/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/InfoPage.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/JobHistory.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/Skills.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/Language.js",[],"/media/saeed/9826C69826C67732/react-projects/profile/frontend/src/components/ResumeViews/Education.js",[],{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","severity":1,"message":"341","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":20},{"ruleId":"344","severity":1,"message":"345","line":25,"column":6,"nodeType":"346","endLine":25,"endColumn":8,"suggestions":"347"},{"ruleId":"344","severity":1,"message":"348","line":42,"column":6,"nodeType":"346","endLine":42,"endColumn":36,"suggestions":"349"},{"ruleId":"344","severity":1,"message":"350","line":69,"column":6,"nodeType":"346","endLine":69,"endColumn":8,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":82,"column":5,"nodeType":"354","messageId":"355","endLine":99,"endColumn":6},{"ruleId":"356","severity":1,"message":"357","line":112,"column":9,"nodeType":"358","endLine":120,"endColumn":11},{"ruleId":"340","severity":1,"message":"359","line":7,"column":3,"nodeType":"342","messageId":"343","endLine":7,"endColumn":10},{"ruleId":"344","severity":1,"message":"345","line":41,"column":6,"nodeType":"346","endLine":41,"endColumn":8,"suggestions":"360"},{"ruleId":"361","severity":1,"message":"362","line":123,"column":19,"nodeType":"363","messageId":"364","endLine":123,"endColumn":21},{"ruleId":"344","severity":1,"message":"365","line":26,"column":6,"nodeType":"346","endLine":26,"endColumn":8,"suggestions":"366"},{"ruleId":"344","severity":1,"message":"348","line":23,"column":6,"nodeType":"346","endLine":23,"endColumn":35,"suggestions":"367"},{"ruleId":"340","severity":1,"message":"368","line":89,"column":10,"nodeType":"342","messageId":"343","endLine":89,"endColumn":14},{"ruleId":"340","severity":1,"message":"369","line":92,"column":10,"nodeType":"342","messageId":"343","endLine":92,"endColumn":19},{"ruleId":"344","severity":1,"message":"370","line":105,"column":6,"nodeType":"346","endLine":105,"endColumn":14,"suggestions":"371"},{"ruleId":"340","severity":1,"message":"372","line":106,"column":9,"nodeType":"342","messageId":"343","endLine":106,"endColumn":25},{"ruleId":"340","severity":1,"message":"373","line":150,"column":9,"nodeType":"342","messageId":"343","endLine":150,"endColumn":26},{"ruleId":"340","severity":1,"message":"374","line":163,"column":9,"nodeType":"342","messageId":"343","endLine":163,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":197,"column":21,"nodeType":"358","endLine":200,"endColumn":23},{"ruleId":"344","severity":1,"message":"375","line":81,"column":6,"nodeType":"346","endLine":81,"endColumn":16,"suggestions":"376"},{"ruleId":"356","severity":1,"message":"357","line":109,"column":7,"nodeType":"358","endLine":121,"endColumn":9},{"ruleId":"356","severity":1,"message":"357","line":130,"column":17,"nodeType":"358","endLine":133,"endColumn":19},{"ruleId":"340","severity":1,"message":"377","line":1,"column":28,"nodeType":"342","messageId":"343","endLine":1,"endColumn":34},{"ruleId":"344","severity":1,"message":"378","line":34,"column":6,"nodeType":"346","endLine":34,"endColumn":8,"suggestions":"379"},{"ruleId":"356","severity":1,"message":"357","line":83,"column":25,"nodeType":"358","endLine":86,"endColumn":27},{"ruleId":"340","severity":1,"message":"377","line":1,"column":28,"nodeType":"342","messageId":"343","endLine":1,"endColumn":34},{"ruleId":"344","severity":1,"message":"380","line":55,"column":6,"nodeType":"346","endLine":55,"endColumn":8,"suggestions":"381"},{"ruleId":"356","severity":1,"message":"357","line":99,"column":19,"nodeType":"358","endLine":102,"endColumn":21},{"ruleId":"340","severity":1,"message":"341","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":20},{"ruleId":"344","severity":1,"message":"382","line":25,"column":6,"nodeType":"346","endLine":25,"endColumn":8,"suggestions":"383"},{"ruleId":"344","severity":1,"message":"348","line":40,"column":6,"nodeType":"346","endLine":40,"endColumn":35,"suggestions":"384"},{"ruleId":"344","severity":1,"message":"348","line":32,"column":6,"nodeType":"346","endLine":32,"endColumn":35,"suggestions":"385"},{"ruleId":"344","severity":1,"message":"348","line":33,"column":6,"nodeType":"346","endLine":33,"endColumn":35,"suggestions":"386"},{"ruleId":"344","severity":1,"message":"387","line":49,"column":6,"nodeType":"346","endLine":49,"endColumn":12,"suggestions":"388"},{"ruleId":"389","severity":1,"message":"390","line":101,"column":13,"nodeType":"391","messageId":"364","endLine":101,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":112,"column":31,"nodeType":"363","messageId":"364","endLine":112,"endColumn":33},{"ruleId":"361","severity":1,"message":"362","line":120,"column":33,"nodeType":"363","messageId":"364","endLine":120,"endColumn":35},{"ruleId":"361","severity":1,"message":"362","line":155,"column":33,"nodeType":"363","messageId":"364","endLine":155,"endColumn":35},{"ruleId":"361","severity":1,"message":"362","line":163,"column":35,"nodeType":"363","messageId":"364","endLine":163,"endColumn":37},{"ruleId":"344","severity":1,"message":"392","line":12,"column":6,"nodeType":"346","endLine":12,"endColumn":8,"suggestions":"393"},{"ruleId":"340","severity":1,"message":"394","line":9,"column":8,"nodeType":"342","messageId":"343","endLine":9,"endColumn":17},{"ruleId":"344","severity":1,"message":"395","line":31,"column":6,"nodeType":"346","endLine":31,"endColumn":8,"suggestions":"396"},{"ruleId":"344","severity":1,"message":"348","line":62,"column":6,"nodeType":"346","endLine":62,"endColumn":35,"suggestions":"397"},{"ruleId":"356","severity":1,"message":"357","line":53,"column":17,"nodeType":"358","endLine":56,"endColumn":19},{"ruleId":"344","severity":1,"message":"398","line":42,"column":6,"nodeType":"346","endLine":42,"endColumn":35,"suggestions":"399"},{"ruleId":"344","severity":1,"message":"398","line":41,"column":6,"nodeType":"346","endLine":41,"endColumn":35,"suggestions":"400"},{"ruleId":"344","severity":1,"message":"398","line":55,"column":6,"nodeType":"346","endLine":55,"endColumn":35,"suggestions":"401"},{"ruleId":"356","severity":1,"message":"357","line":52,"column":17,"nodeType":"358","endLine":55,"endColumn":19},{"ruleId":"340","severity":1,"message":"402","line":96,"column":11,"nodeType":"342","messageId":"343","endLine":96,"endColumn":14},{"ruleId":"340","severity":1,"message":"402","line":124,"column":13,"nodeType":"342","messageId":"343","endLine":124,"endColumn":16},{"ruleId":"340","severity":1,"message":"402","line":153,"column":13,"nodeType":"342","messageId":"343","endLine":153,"endColumn":16},{"ruleId":"340","severity":1,"message":"402","line":182,"column":13,"nodeType":"342","messageId":"343","endLine":182,"endColumn":16},{"ruleId":"340","severity":1,"message":"402","line":583,"column":15,"nodeType":"342","messageId":"343","endLine":583,"endColumn":18},{"ruleId":"340","severity":1,"message":"402","line":625,"column":15,"nodeType":"342","messageId":"343","endLine":625,"endColumn":18},{"ruleId":"340","severity":1,"message":"403","line":7,"column":3,"nodeType":"342","messageId":"343","endLine":7,"endColumn":9},{"ruleId":"340","severity":1,"message":"404","line":23,"column":10,"nodeType":"342","messageId":"343","endLine":23,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":3,"column":37,"nodeType":"407","messageId":"408","endLine":3,"endColumn":38,"suggestions":"409"},{"ruleId":"405","severity":1,"message":"410","line":3,"column":39,"nodeType":"407","messageId":"408","endLine":3,"endColumn":40,"suggestions":"411"},{"ruleId":"412","severity":1,"message":"413","line":7,"column":1,"nodeType":"414","endLine":31,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":66,"column":17,"nodeType":"358","endLine":69,"endColumn":19},{"ruleId":"412","severity":1,"message":"413","line":10,"column":1,"nodeType":"414","endLine":52,"endColumn":2},{"ruleId":"340","severity":1,"message":"403","line":6,"column":3,"nodeType":"342","messageId":"343","endLine":6,"endColumn":9},{"ruleId":"412","severity":1,"message":"413","line":28,"column":1,"nodeType":"414","endLine":144,"endColumn":2},{"ruleId":"412","severity":1,"message":"413","line":51,"column":1,"nodeType":"414","endLine":262,"endColumn":2},{"ruleId":"336","replacedBy":"415"},{"ruleId":"338","replacedBy":"416"},{"ruleId":"344","severity":1,"message":"417","line":13,"column":6,"nodeType":"346","endLine":13,"endColumn":8,"suggestions":"418"},{"ruleId":"412","severity":1,"message":"413","line":15,"column":1,"nodeType":"414","endLine":68,"endColumn":2},{"ruleId":"344","severity":1,"message":"419","line":36,"column":6,"nodeType":"346","endLine":36,"endColumn":15,"suggestions":"420"},{"ruleId":"344","severity":1,"message":"421","line":41,"column":6,"nodeType":"346","endLine":41,"endColumn":16,"suggestions":"422"},{"ruleId":"344","severity":1,"message":"419","line":37,"column":6,"nodeType":"346","endLine":37,"endColumn":15,"suggestions":"423"},{"ruleId":"344","severity":1,"message":"421","line":40,"column":6,"nodeType":"346","endLine":40,"endColumn":17,"suggestions":"424"},{"ruleId":"340","severity":1,"message":"425","line":34,"column":11,"nodeType":"342","messageId":"343","endLine":34,"endColumn":13},{"ruleId":"344","severity":1,"message":"426","line":49,"column":6,"nodeType":"346","endLine":49,"endColumn":35,"suggestions":"427"},"no-native-reassign",["428"],"no-negated-in-lhs",["429"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load_posts'. Either include it or remove the dependency array. If 'load_posts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["430"],"React Hook useEffect has a missing dependency: 'resetState'. Either include it or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["431"],"React Hook useEffect has a missing dependency: 'load_user'. Either include it or remove the dependency array. If 'load_user' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["432"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Divider' is defined but never used.",["433"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'load_bookmark'. Either include it or remove the dependency array. If 'load_bookmark' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["434"],["435"],"'page' is assigned a value but never used.","'openPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'load_likes' and 'load_post'. Either include them or remove the dependency array. If 'load_post' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["436"],"'AddCommentHandle' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'load_profile' and 'load_user_posts'. Either include them or remove the dependency array. If 'load_profile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["437"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'load_rooms'. Either include it or remove the dependency array. If 'load_rooms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["438"],"React Hook useEffect has missing dependencies: 'id', 'load_follower', 'load_following', 'load_likes', and 'type'. Either include them or remove the dependency array. If 'load_likes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["439"],"React Hook useEffect has a missing dependency: 'load_notif'. Either include it or remove the dependency array. If 'load_notif' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["440"],["441"],["442"],["443"],"React Hook useEffect has missing dependencies: 'client' and 'load_msg'. Either include them or remove the dependency array. If 'load_msg' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["444"],"no-dupe-keys","Duplicate key 'overflow'.","ObjectExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["445"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["446"],["447"],"React Hook useEffect has missing dependencies: 'resetState' and 'setOpenPopup'. Either include them or remove the dependency array. If 'resetState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["448"],["449"],["450"],"'res' is assigned a value but never used.","'LOGOUT' is defined but never used.","'load_bookmark' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["451","452"],"Unnecessary escape character: \\_.",["453","454"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["428"],["429"],"React Hook useEffect has a missing dependency: 'load_resume'. Either include it or remove the dependency array. If 'load_resume' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["455"],"React Hook useEffect has missing dependencies: 'end_date' and 'setOpenPopup'. Either include them or remove the dependency array. If 'setOpenPopup' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"React Hook useEffect has missing dependencies: 'setOpenPopup' and 'title'. Either include them or remove the dependency array. If 'setOpenPopup' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["457"],["458"],["459"],"'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setOpenPopup'. Either include it or remove the dependency array. If 'setOpenPopup' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["460"],"no-global-assign","no-unsafe-negation",{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"461","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"470","fix":"482"},{"desc":"470","fix":"483"},{"desc":"470","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"470","fix":"491"},{"desc":"492","fix":"493"},{"desc":"492","fix":"494"},{"desc":"492","fix":"495"},{"messageId":"496","fix":"497","desc":"498"},{"messageId":"499","fix":"500","desc":"501"},{"messageId":"496","fix":"502","desc":"498"},{"messageId":"499","fix":"503","desc":"501"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},"Update the dependencies array to be: [load_posts]",{"range":"516","text":"517"},"Update the dependencies array to be: [requestFail, isAuthenticated, resetState]",{"range":"518","text":"519"},"Update the dependencies array to be: [load_user]",{"range":"520","text":"521"},{"range":"522","text":"517"},"Update the dependencies array to be: [load_bookmark]",{"range":"523","text":"524"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState]",{"range":"525","text":"526"},"Update the dependencies array to be: [load_likes, load_post, postId]",{"range":"527","text":"528"},"Update the dependencies array to be: [load_profile, load_user_posts, userName]",{"range":"529","text":"530"},"Update the dependencies array to be: [load_rooms]",{"range":"531","text":"532"},"Update the dependencies array to be: [id, load_follower, load_following, load_likes, type]",{"range":"533","text":"534"},"Update the dependencies array to be: [load_notif]",{"range":"535","text":"536"},{"range":"537","text":"526"},{"range":"538","text":"526"},{"range":"539","text":"526"},"Update the dependencies array to be: [client, load_msg, room]",{"range":"540","text":"541"},"Update the dependencies array to be: [history]",{"range":"542","text":"543"},"Update the dependencies array to be: [props]",{"range":"544","text":"545"},{"range":"546","text":"526"},"Update the dependencies array to be: [requestFail, requestSuccess, resetState, setOpenPopup]",{"range":"547","text":"548"},{"range":"549","text":"548"},{"range":"550","text":"548"},"removeEscape",{"range":"551","text":"552"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"553","text":"554"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"555","text":"552"},{"range":"556","text":"554"},"Update the dependencies array to be: [load_resume]",{"range":"557","text":"558"},"Update the dependencies array to be: [end_date, new_edu, setOpenPopup]",{"range":"559","text":"560"},"Update the dependencies array to be: [new_lang, setOpenPopup, title]",{"range":"561","text":"562"},"Update the dependencies array to be: [end_date, new_job, setOpenPopup]",{"range":"563","text":"564"},"Update the dependencies array to be: [new_skill, setOpenPopup, title]",{"range":"565","text":"566"},"Update the dependencies array to be: [requestFail, requestSuccess, setOpenPopup]",{"range":"567","text":"568"},[696,698],"[load_posts]",[923,953],"[requestFail, isAuthenticated, resetState]",[1668,1670],"[load_user]",[1069,1071],[715,717],"[load_bookmark]",[569,598],"[requestFail, requestSuccess, resetState]",[2338,2346],"[load_likes, load_post, postId]",[1907,1917],"[load_profile, load_user_posts, userName]",[798,800],"[load_rooms]",[1115,1117],"[id, load_follower, load_following, load_likes, type]",[662,664],"[load_notif]",[972,1001],[742,771],[890,919],[1514,1520],"[client, load_msg, room]",[269,271],"[history]",[1127,1129],"[props]",[1440,1469],[1046,1075],"[requestFail, requestSuccess, resetState, setOpenPopup]",[1064,1093],[1453,1482],[162,163],"",[162,162],"\\",[164,165],[164,164],[594,596],"[load_resume]",[1216,1225],"[end_date, new_edu, setOpenPopup]",[1140,1150],"[new_lang, setOpenPopup, title]",[1183,1192],"[end_date, new_job, setOpenPopup]",[1124,1135],"[new_skill, setOpenPopup, title]",[1182,1211],"[requestFail, requestSuccess, setOpenPopup]"]